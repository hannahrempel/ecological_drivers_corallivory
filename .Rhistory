filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(estimate_backtransformed = case_when(
term=="(Intercept)"~exp(estimate),
TRUE~as.double(exp(estimate)) #not multiplying the following by 100 b/c y is already a %
)) %>%
mutate(model="Percent grazed") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5, estimate_backtransformed) %>%
mutate(across(where(is.double), ~round(.x, 3)))
table_s4 <- scar_density_model_output %>%
bind_rows(proportion_grazed_model_output)
write_csv(table_s4, here("supplements/table_s4_site_level_glmm_results.csv"))
set.seed(1945) #for reproducible results from random simulations of residuals
# total abundance of colonies per transect
total_coral_abundance <- coral_scar_df %>%
group_by(region, site, transect, depth_m) %>%
reframe(total_n_colonies=n())
# calculating transect-level coral diversity and coral cover
coral_taxa_abundance_cover <- coral_scar_df %>%
group_by(region, site, transect, depth_m, coral_species) %>%
reframe(n_colonies=n(), #transect-level abundance of coral colonies per species
pct_coral_cover_species=(sum(col_area_cm2)/300000)*100) %>% #coral cover by species
left_join(total_coral_abundance) #total coral abundance per transect
# calculating coral diversity and total coral cover per transect
coral_diversity_and_cover <- coral_taxa_abundance_cover %>%
mutate(prop_abundance=n_colonies/total_n_colonies, #proportional abundance of coral taxa
p_ln_prop_abundance=prop_abundance*log(prop_abundance)) %>% #for diversity calculations
group_by(region, site, transect, depth_m) %>%
reframe(coral_diversity=sum(p_ln_prop_abundance)*-1, #summarizing diversity per transect
pct_coral_cover=sum(pct_coral_cover_species)) #summarizing transect-level coral cover
# abundance of colonies per species per transect
n_colonies_species_transect <- coral_scar_df %>%
group_by(region, site, transect, depth_m, coral_species) %>%
dplyr::reframe(n_colonies=n()) %>% #transect-level abundance of coral colonies per species
left_join(total_coral_abundance, by = join_by(region, site, transect, depth_m))
# transect-level summary of the number of grazed colonies of four heavily predated taxa
transect_level_corallivory <- coral_scar_df %>%
group_by(region, site, transect, depth_m, coral_species) %>%
filter(n_new_scars>0) %>%
dplyr::reframe(n_colonies_grazed=n())
transect_corallivory_diversity_df <- coral_taxa_abundance_cover %>%
left_join(transect_level_corallivory, by = join_by(region, site, transect, depth_m, coral_species)) %>%
mutate(n_colonies_grazed=replace_na(n_colonies_grazed, 0)) %>%
select(region, site, transect, depth_m, coral_species, pct_coral_cover_species, n_colonies_grazed, n_colonies) %>%
filter(coral_species %in% c("Orbicella annularis", "Porites astreoides", "Branching Porites spp.", "Siderastrea siderea")) %>%
left_join(coral_diversity_and_cover, by = join_by(region, site, transect, depth_m)) %>%
mutate(proportional_cover=pct_coral_cover_species/pct_coral_cover)
set.seed(1945) #for reproducible results from random simulations of residuals
#looking at data distributions
transect_corallivory_diversity_df %>%
ggplot(aes(n_colonies_grazed))+
geom_histogram()
#coral cover is severely skewed
transect_corallivory_diversity_df %>%
ggplot(aes(pct_coral_cover_species))+
geom_histogram()
#checking that species percent cover does not have 0's
summary(transect_corallivory_diversity_df$pct_coral_cover_species)
#log-transformation normalized coral cover distribution
transect_corallivory_diversity_df %>%
ggplot(aes(log(pct_coral_cover_species)))+
geom_histogram()
#scar abundance per colony with poisson
n_grazed_diversity_poisson <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity+ coral_species+coral_species:log(proportional_cover)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
family=poisson,
data = transect_corallivory_diversity_df)
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_grazed_diversity_nbinom <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity+ coral_species+ coral_species:log(proportional_cover)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = transect_corallivory_diversity_df)
#likelihood ratio tests suggest NS difference between poisson and negative binomial
anova(n_grazed_diversity_poisson, n_grazed_diversity_nbinom)
#simulating residuals and evaluating model fit
n_grazed_diversity_poisson_residuals <- DHARMa::simulateResiduals(n_grazed_diversity_poisson, n = 10000, use.u = T)
n_grazed_diversity_nbinom_residuals <- DHARMa::simulateResiduals(n_grazed_diversity_nbinom, n = 10000, use.u = T)
plot(n_grazed_diversity_poisson_residuals) #diagnostic plot indicates problems
plot(n_grazed_diversity_nbinom_residuals) #diagnostic plot indicate no sig problems... n binomial is better fit
#testing for overdispersion, zero inflation, and outliers
DHARMa::testDispersion(n_grazed_diversity_nbinom, plot=FALSE) #no significant overdispersion
DHARMa::testZeroInflation(n_grazed_diversity_nbinom) #NS zero inflation
DHARMa::testOutliers(n_grazed_diversity_nbinom, type = "bootstrap", nBoot = 1000) #NS outliers
n_grazed_diversity_nbinom %>% summary()
n_grazed_diversity_nbinom_ci <- confint(n_grazed_diversity_nbinom) %>%
as_tibble() %>%
select(-Estimate)
#tidying model output
transect_level_model_output <- n_grazed_diversity_nbinom %>%
tidy() %>%
bind_cols(n_grazed_diversity_nbinom_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(estimate_backtransformed = exp(estimate)) %>%
mutate(model="Colonies grazed") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5, estimate_backtransformed) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", "")) %>%
mutate(term=str_replace(term, "region", ""))
write_csv(transect_level_model_output, here("supplements/table_s5_transect_level_grazed_coral_abundance_results.csv"))
corallivory_by_diversity_fig <- transect_corallivory_diversity_df %>%
mutate(coral_species=factor(coral_species, levels = c("Orbicella annularis", "Branching Porites spp.", "Porites astreoides", "Siderastrea siderea"))) %>%
mutate(region= factor(region, levels = c("PanamÃ¡", "Florida",  "St. Croix", "Bonaire"))) %>%
ggplot(aes(x=coral_diversity, y=n_colonies_grazed, color=region))+
geom_point(alpha=0.6)+
scale_y_continuous(breaks = c(0,2,4,6,8,10),
labels= c(0,2,4,6,8,10),
limits=c(0,10.2))+
theme_bw()+
scale_color_manual(values=region_palette)+
scale_fill_manual(values=region_palette)+
facet_wrap(~coral_species)+
labs(x = "Coral diversity (H')",
y = expression(paste("Colonies grazed per 30 m" ^2)),
color="Region",
fill="Region")+
theme_bw()+
theme(legend.position = "top")
#reading in coral genus icons
branching_porties_image <- magick::image_read(path=here("figures_tables/reef_images", "Branching_porties.png"), density = NULL, depth = NULL, strip = TRUE)
orbicella_image <- magick::image_read(path=here("figures_tables/reef_images", "Orbicella_annularis.png"), density = NULL, depth = NULL, strip = TRUE)
porites_astreoides_image <- magick::image_read(path=here("figures_tables/reef_images", "Porites_astreoides.png"), density = NULL, depth = NULL, strip = TRUE)
siderastrea_image <- magick::image_read(path=here("figures_tables/reef_images", "Siderastrea_siderea.png"), density = NULL, depth = NULL, strip = TRUE)
#adding coral images to figure (image placement is off in R, but good in ggsave generated png)
corallivory_by_diversity_fig_final <- cowplot::ggdraw() +
draw_plot(corallivory_by_diversity_fig)+ #adds the plot (order matters to overlay the layers correctly)
draw_image(orbicella_image, x = -0.385, y = 0.29, scale=0.075)+
draw_image(branching_porties_image, x = 0.081, y = 0.29, scale=0.08)+
draw_image(porites_astreoides_image, x = -0.385, y = -0.113, scale=0.062)+
draw_image(siderastrea_image, x = 0.08, y = -0.11, scale=0.063)
#saving figure
ggsave(plot=corallivory_by_diversity_fig_final, filename=here("supplements/fig_s3_corallivory_by_coral_diversity.png"), width = 190, height = 140, dpi = 600, units = "mm")
corallivory_by_diversity_fig_final
set.seed(1945) #for reproducible results from random simulations of residuals
#scar abundance per colony with poisson
n_scars_col_level_poisson <- glmmTMB::glmmTMB(n_new_scars ~ col_area_cm2 + coral_species + region+
(1 | site/transect), #transects nested within sites within regions
family=poisson,
data = coral_scar_df)
n_scars_col_level_poisson %>% summary()
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_scars_col_level_nbinom <- glmmTMB::glmmTMB(n_new_scars ~ col_area_cm2 + coral_species + region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = coral_scar_df)
#likelihood ratio test of model using poisson versus negative binomial  distribution
anova(n_scars_col_level_poisson, n_scars_col_level_nbinom)
#simulating residuals and testing
n_scars_col_level_residuals <- DHARMa::simulateResiduals(n_scars_col_level_nbinom, n = 10000, use.u = T)
#testing for zero-inflation in negative binomial model: zero-inflation not significant
n_scars_col_level_zero_inf_test<- DHARMa::testZeroInflation(n_scars_col_level_residuals)
n_scars_col_level_zero_inf_test
DHARMa::testDispersion(n_scars_col_level_residuals, plot=FALSE) #no significant overdispersion
plot(n_scars_col_level_residuals) #NS overdispersion, but potentially sig. outliers.
#Testing for outliers using bootstapping (unhash to run, code may take several hours to run)
outlier_test_n_scars_col_level <- DHARMa::testOutliers(n_scars_col_level_residuals, type = "bootstrap", nBoot = 1000) #NS outliers
#model output
n_scars_col_level_nbinom %>% summary()
#summary of mean number of new scars per colony by region
coral_scar_df %>%
group_by(region) %>%
dplyr::reframe(mean_n_new_scars=mean(n_new_scars)) %>%
mutate(mean_n_new_scars=round(mean_n_new_scars, 3))
coral_scar_df %>%
group_by(coral_species) %>%
reframe(mean_new_scars=mean(n_new_scars),
sem=sem(n_new_scars))
#tidying model output and calculating confidence intervals
n_scars_col_level_ci <- confint(n_scars_col_level_nbinom) %>%
as_tibble() %>%
select(-Estimate)
#tidying model output
n_scars_col_level_model_output <- n_scars_col_level_nbinom %>%
tidy() %>%
bind_cols(n_scars_col_level_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(estimate_backtransformed = exp(estimate)) %>%
mutate(model="Scar abundance") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5, estimate_backtransformed) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", ""))
n_scars_col_level_model_output
write_csv(n_scars_col_level_model_output, here("supplements/table_s6_colony_level_scar_abundance_results.csv"))
predated_colonies_subset <- coral_scar_df %>%
mutate(pct_grazed=total_grazed_cm2/col_area_cm2*100) %>%
filter(n_new_scars>0) %>%
#organizing as factor so the Branching Porites spp. cat is grouped with P. astreoides
mutate(coral_species=factor(coral_species, levels = c("Agaricia agaricites", "Agaricia humilis", "Agaricia tenuifolia", "Agaricia spp.", "Madracis auretenra", "Madracis decactis", "Orbicella annularis", "Orbicella faveolata", "Branching Porites spp.", "Porites astreoides", "Siderastrea siderea", "Stephanocoenia intersepta"))) %>%
mutate(region= factor(region, levels = c("PanamÃ¡", "Florida",  "St. Croix", "Bonaire")))
set.seed(1945) #for reproducible results from random simulations of residuals
mean_scar_size <- glmmTMB::glmmTMB(log(mean_scar_area_cm2) ~ log(col_area_cm2) + coral_species + region+
(1 | site/transect), #transects nested within sites within regions
family=gaussian,
data = predated_colonies_subset)
#checking model residuals
mean_scar_size_residuals <- DHARMa::simulateResiduals(mean_scar_size, n = 10000, use.u = T)
DHARMa::testDispersion(mean_scar_size_residuals) #no sig. overdispersion
plot(mean_scar_size_residuals) #KS test NS, but potential outliers
mean_scar_size_outliers <- DHARMa::outliers(mean_scar_size_residuals)
mean_scar_size_outliers
outlier_nums <-outliers(mean_scar_size_residuals)
predated_colonies_no_outliers <- predated_colonies_subset %>%
mutate(index=row_number()) %>%
filter(!index %in% outlier_nums)
#comparing outliers to the size distribution of scars across the dataset
df_outliers <- predated_colonies_subset %>%
mutate(index=row_number()) %>%
filter(index %in% outlier_nums)
df_outliers #two extremely small scars, and one extremely large
fivenum(predated_colonies_subset$mean_scar_area_cm2) #two of the outliers are the min/max scars
#rerunning model without outliers
mean_scar_size_no_outliers <- glmmTMB::glmmTMB(log(mean_scar_area_cm2) ~ log(col_area_cm2) + coral_species + region+
(1 | site/transect), #transects nested within sites within regions
family=gaussian,
data = predated_colonies_no_outliers)
mean_scar_size_residuals_no_outliers <- DHARMa::simulateResiduals(mean_scar_size_no_outliers, n = 10000, use.u = T)
plot(mean_scar_size_residuals_no_outliers) #KS test NS, four potential outliers
#comparing model results for data with outliers and data with outliers removed
mean_scar_size %>% summary
mean_scar_size_no_outliers %>% summary
mean_scar_size_col_level_ci <- confint(mean_scar_size_no_outliers) %>%
as_tibble() %>%
select(-Estimate)
mean_scar_size_col_level_model_output <- mean_scar_size_no_outliers %>%
tidy() %>%
filter(term != "sd__Observation") %>%
bind_cols(mean_scar_size_col_level_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(estimate_backtransformed = case_when(term=="(Intercept)"~exp(estimate),
term=="log(col_area_cm2)"~(estimate),
TRUE~as.double((exp(estimate))))) %>%
mutate(model="Colony-level mean scar size") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5, estimate_backtransformed) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", ""))
write_csv(mean_scar_size_col_level_model_output, here("supplements/table_s7_colony_level_mean_scar_size_results.csv"))
set.seed(1945) #for reproducible results from random simulations of residuals
pct_grazed <- glmmTMB::glmmTMB(log(pct_grazed) ~ log(col_area_cm2) + coral_species + region+
(1 | site/transect), #transects nested within sites within regions
family=gaussian,
data = predated_colonies_subset)
#checking model residuals
pct_grazed_residuals <- DHARMa::simulateResiduals(pct_grazed, n = 10000, use.u = T)
DHARMa::testDispersion(pct_grazed_residuals) #no significant overdispersion
plot(pct_grazed_residuals) #dispersion, outliers, and KS all good
#model results
pct_grazed %>% summary()
pct_grazed_col_level_ci <- confint(pct_grazed) %>%
as_tibble() %>%
select(-Estimate)
pct_grazed_col_level_model_output <- pct_grazed %>%
tidy() %>%
filter(term != "sd__Observation") %>%
bind_cols(pct_grazed_col_level_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(estimate_backtransformed = case_when(term=="(Intercept)"~exp(estimate),
term=="log(col_area_cm2)"~(estimate),
TRUE~as.double((exp(estimate))))) %>%
mutate(model="Colony-level percent coral grazed") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5, estimate_backtransformed) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", ""))
write_csv(pct_grazed_col_level_model_output,  here("supplements/table_s8_colony_level_percent_coral_grazed_results.csv"))
#list of coral species arranged by the total number of colonies with scars
coral_species_arranged_by_n_grazed <- predated_colonies_subset %>%
group_by(coral_species) %>%
dplyr::reframe(n_grazed=n()) %>%
arrange(-n_grazed)
#used in graphs to simultaneously jitter and nudge points to avoid overlap
jitter_nudge <- ggpp::position_jitternudge(height = 0.08, y = -0.1, nudge.from = "jittered")
#summarizing y min and max for axis limits in following figure
predated_colonies_subset %>%
dplyr::reframe(min(mean_scar_area_cm2), max(mean_scar_area_cm2))
#first figure in set
fig_mean_scar_taxa <-predated_colonies_subset %>%
#for consistent order of regions
mutate(region= factor(region, levels = c("PanamÃ¡", "Florida",  "St. Croix", "Bonaire"))) %>%
#arranging coral species by the number of colonies with scars
mutate(coral_species= factor(coral_species, levels = c("Porites astreoides", "Branching Porites spp.", "Orbicella annularis","Siderastrea siderea","Agaricia agaricites","Agaricia tenuifolia", "Madracis decactis", "Orbicella faveolata", "Agaricia humilis", "Madracis auretenra", "Agaricia spp.", "Stephanocoenia intersepta"))) %>%
ggplot()+
ggridges::geom_density_ridges(aes(x=mean_scar_area_cm2, y=coral_species), alpha=0.7, scale=0.7)+
geom_point(aes(x=mean_scar_area_cm2, y=coral_species, color=region), size=0.7, alpha=0.5,
position=jitter_nudge)+
scale_color_manual(values=region_palette)+
scale_fill_manual(values=region_palette)+
scale_y_discrete(expand = c(0.1, 0), limits = rev)+
scale_x_continuous(trans = scales::log_trans(),
breaks = c(0.001, 0.01, 0.1, 1, 10, 55),
labels= c(0.001, 0.01, 0.1, 1, 10, 55),
limits=c(0.0009,56))+
labs(x = expression(paste("Mean scar surface area (cm" ^2, ")")),
y = "Coral taxa",
color="Region",
fill="Region")+
theme_bw()+
theme(legend.position = "top",
axis.text.y= element_text(face="italic", size = 8),
axis.text.x=element_text(size = 8),
axis.title=element_text(size = 10))
#summarizing y min and max for axis limits in following figure
predated_colonies_subset %>%
dplyr::reframe(min(pct_grazed), max(pct_grazed))
#second figure in set
fig_pctgrazed_taxa <- predated_colonies_subset %>%
mutate(region= factor(region, levels = c("PanamÃ¡", "Florida",  "St. Croix", "Bonaire"))) %>%
mutate(coral_species= factor(coral_species, levels = c("Porites astreoides", "Branching Porites spp.", "Orbicella annularis","Siderastrea siderea","Agaricia agaricites","Agaricia tenuifolia", "Madracis decactis", "Orbicella faveolata", "Agaricia humilis", "Madracis auretenra", "Agaricia spp.", "Stephanocoenia intersepta"))) %>%
ggplot()+
ggridges::geom_density_ridges(aes(x=pct_grazed, y=coral_species), alpha=0.7, scale=0.7)+
geom_point(aes(x=pct_grazed, y=coral_species, color=region), size=0.7, alpha=0.6, position=jitter_nudge)+
scale_color_manual(values=region_palette)+
scale_fill_manual(values=region_palette)+
scale_y_discrete(expand = c(0.1, 0), limits = rev)+ #so corals are in alphabetical order
scale_x_continuous(trans = scales::log_trans(),
breaks = c(0.001,  0.01, 0.1, 1, 10, 75),
labels= c(0.001, 0.01, 0.1, 1, 10, 75),
limits=c(0.001,75))+
labs(x = expression(paste("Coral area predated (%)")),
y = "",
color="Region",
fill="Region")+
theme_bw()+
theme(legend.position = "top",
axis.text.y= element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(size = 8),
axis.title=element_text(size = 10))
#summarizing x min and max for axis limits in following figure
predated_colonies_subset %>%
dplyr::reframe(min(col_area_cm2), max(col_area_cm2))
#third figure in set
fig_pctgrazed_colsize <- predated_colonies_subset %>%
mutate(region= factor(region, levels = c("PanamÃ¡", "Florida",  "St. Croix", "Bonaire"))) %>%
ggplot(aes(y=pct_grazed, x=col_area_cm2, color=region))+
geom_point(size=0.8, alpha=0.75)+
geom_smooth(method="lm")+
scale_colour_manual(values=region_palette)+
theme_bw()+
labs(x = expression(paste("Coral colony surface area (", cm^2, ")")),
y = expression(paste("Coral area predated (%)")),
color="Region")+
scale_y_continuous(trans = scales::log_trans(),
breaks = c(0.0001, 0.001, 0.01, 0.1, 1, 10, 25, 75),
labels= c("0.0001", 0.001, 0.01, 0.1, 1, 10, 25, 75),
limits=c(0.0001,75))+
scale_x_continuous(trans = scales::log_trans(),
breaks = c(5, 10, 50, 250, 1000, 5000, 20000),
labels= c(5, 10, 50, 250, 1000, 5000, 20000),
limits=c(5,20000))+
theme(legend.position	="none",
axis.text.x=element_text(size = 8),
axis.title=element_text(size = 10))
#creating combined three-panel figure
predated_coral_patterns <- ggpubr::ggarrange(fig_mean_scar_taxa,
fig_pctgrazed_taxa,
fig_pctgrazed_colsize,
ncol=3,
align="h",
common.legend = TRUE,
labels=c("a","b", "c"),
widths=c(1.5,1,1.2),
legend="top")
#saving figure
ggsave(plot=predated_coral_patterns, filename=here("figures_tables/fig5_predated_coral_patterns.jpg"), width = 215, height = 80, dpi = 600, units = "mm")
predated_coral_patterns
View(fish_df)
View(coral_scar_df)
View(site_coordinates)
n_coral_surveys <- coral_scar_df %>%
group_by(region, site) %>%
distinct(transect) %>%
dplyr::reframe(n_coral_surveys=n())
n_surveys <- fish_df %>%
group_by(region, site) %>%
distinct(transect) %>%
dplyr::reframe(n_fish_surveys=n()) %>%
left_join(n_coral_surveys, by = join_by(region, site))
table_s1 <- site_coordinates %>%
left_join(n_surveys)
write.csv(table_s1,
here("supplements/table_s1_site_coordinates_sample_size.csv"),
fileEncoding = "UTF-8",
row.names=FALSE)
# Transect-level summary of fish density
major_corallivores_df <- fish_df %>%
filter(species %in% c("Scarus taeniopterus", "Scarus vetula", "Sparisoma viride")) %>%
group_by(region, site, date, transect, depth_m, survey_l_m, survey_w_m) %>%
dplyr::reframe(n_major_corallivores=n())
#merging data in transect-level summary of parrotfish denisty
pf_density_transect <- fish_df %>%
select(region, site, date, transect, depth_m, survey_l_m, survey_w_m) %>%
mutate(survey_area_m2=survey_l_m*survey_w_m) %>% #summarizing transect metadata
distinct() %>%
left_join(major_corallivores_df) %>% #adding in fish data
mutate(n_major_corallivores = replace_na(n_major_corallivores, 0), #replacing NA with 0 for surveys with no parrotfishes
density_major_corallivores = n_major_corallivores/survey_area_m2*100) %>% # calculating density (fish/100 m2)
ungroup()
# Site-level summary of fish density
pf_density_site<- pf_density_transect %>%
group_by(region, site) %>%
dplyr::reframe(mean_density_major_corallivores=mean(density_major_corallivores)) %>%
ungroup()
#function to calculate the standard error of the mean
sem <- function(x) {
sd(x, na.rm=TRUE)/sqrt(sum(!is.na(x)))
}
# Region-level summary of fish density
regional_parrotfish_density <- pf_density_site %>%
group_by(region) %>%
dplyr::reframe(mean_density_major=mean(mean_density_major_corallivores),
sem_major=sem(mean_density_major_corallivores))
regional_parrotfish_density
pf_by_region_size_species_df
fish_corals_site_level
regional_parrotfish_coral_scar_summary
#corallivore density ~ region has a non-normal distribution of the residual
rstatix::shapiro_test(residuals(aov(mean_density_major_corallivores~region, data = fish_corals_site_level))) #data violate normality assumption
fish_corals_site_level %>% rstatix::levene_test(mean_density_major_corallivores ~ region)
#coral cover ~ region has a non-normal homogeneity of variance
rstatix::shapiro_test(residuals(aov(mean_pct_coral_cover~region, data = fish_corals_site_level)))
fish_corals_site_level %>% rstatix::levene_test(mean_pct_coral_cover ~ region) #data violate homogeneity of variance assumption
#Kruskal-Wallis test of corallivore density by region and post-hoc Dunn test
KW_test_major_corallivore_density <- kruskal.test(mean_density_major_corallivores ~ region, data=fish_corals_site_level) %>%
tidy()
KW_test_major_corallivore_density
Dunn_test_major_corallivore_density <- fish_corals_site_level %>%
rstatix::dunn_test(mean_density_major_corallivores ~ region, p.adjust.method = "BH", detailed = FALSE)
Dunn_test_major_corallivore_density
#likelihood ratio test of model using poisson versus negative binomial  distribution
anova(n_scars_col_level_poisson, n_scars_col_level_nbinom)
#likelihood ratio tests suggest NS difference between poisson and negative binomial
anova(n_grazed_diversity_poisson, n_grazed_diversity_nbinom)
#simulating residuals and evaluating model fit
n_grazed_diversity_poisson_residuals <- DHARMa::simulateResiduals(n_grazed_diversity_poisson, n = 10000, use.u = T)
plot(n_grazed_diversity_poisson_residuals) #diagnostic plot indicates problems
plot(n_grazed_diversity_poisson_residuals) #diagnostic plot indicates problems
plot(n_grazed_diversity_nbinom_residuals) #diagnostic plot indicate no sig problems... n binomial is better fit
#testing for overdispersion, zero inflation, and outliers
DHARMa::testDispersion(n_grazed_diversity_nbinom, plot=FALSE) #no significant overdispersion
#testing for overdispersion, zero inflation, and outliers
DHARMa::testDispersion(n_grazed_diversity_poisson, plot=FALSE) #no significant overdispersion
DHARMa::testZeroInflation(n_grazed_diversity_poisson) #NS zero inflation
DHARMa::testZeroInflation(n_grazed_diversity_nbinom) #NS zero inflation
DHARMa::testOutliers(n_grazed_diversity_poisson, type = "bootstrap", nBoot = 1000) #NS outliers
DHARMa::testZeroInflation(n_grazed_diversity_poisson) #NS zero inflation
variance(n_grazed_diversity_poisson_residuals)
var(n_grazed_diversity_poisson_residuals)
n_grazed_diversity_poisson_residuals
?DHARMa::simulateResiduals
tidy(n_grazed_diversity_poisson_residuals)
getResiduals(n_grazed_diversity_poisson_residuals)
var(getResiduals(n_grazed_diversity_poisson_residuals))
mean(getResiduals(n_grazed_diversity_poisson_residuals))
#testing for overdispersion, zero inflation, and outliers
DHARMa::testDispersion(n_grazed_diversity_nbinom, plot=FALSE) #no significant overdispersion
DHARMa::testOutliers(n_grazed_diversity_nbinom)
DHARMa::testOutliers(n_grazed_diversity_nbinom, type = "bootstrap", nBoot = 1000) #NS outliers
DHARMa::testOutliers(n_grazed_diversity_poisson)
n_grazed_diversity_nbinom %>% summary()
n_grazed_diversity_poisson %>% summary()
n_grazed_diversity_nbinom %>% summary()
n_grazed_diversity_poisson %>% summary()
KW_test_major_corallivore_density
KW_test_coral_cover
Dunn_test_major_corallivore_density
9.285098e-03
9.285098e-03
1.804257e-02
4.190056e-05
3.349441e-02
2.108929e-01
Dunn_test_major_corallivore_density
KW_test_coral_cover
Dunn_test_coral_cover
View(fish_corals_site_level)
#Kruskal-Wallis test of coral cover by region and post-hoc Dunn test
KW_test_coral_cover <- kruskal.test(mean_pct_coral_cover ~ region, data=fish_corals_site_level) %>%
tidy()
KW_test_coral_cover
Dunn_test_coral_cover <- fish_corals_site_level %>%
rstatix::dunn_test(mean_pct_coral_cover ~ region, p.adjust.method = "BH", detailed = FALSE)
Dunn_test_coral_cover
model_scar_density_region <- aov(log(mean_scars_m2_coral)~region, data = fish_corals_site_level)
#Testing model assumptions: outliers by region via IQR method (none)
fish_corals_site_level %>%
group_by(region) %>%
mutate(lm_mean_scars_m2_coral=log(mean_scars_m2_coral)) %>%
rstatix::identify_outliers(lm_mean_scars_m2_coral)
#Testing model assumptions: no significant violations of homogeneity of variance
fish_corals_site_level %>%
mutate(lm_mean_scars_m2_coral=log(mean_scars_m2_coral)) %>%
rstatix::levene_test(lm_mean_scars_m2_coral ~ region)
#Testing model assumptions: no significant violations of normality assumption by region
fish_corals_site_level %>%
group_by(region) %>%
mutate(lm_mean_scars_m2_coral=log(mean_scars_m2_coral)) %>%
rstatix::shapiro_test(lm_mean_scars_m2_coral)
#Testing model assumptions: no significant violations of normality assumption for overall model
rstatix::shapiro_test(residuals(model_scar_density_region))
#Testing model assumptions: visual assessment of residuals
plot(model_scar_density_region)
#Model meets assumptions, so proceeding with interpreting model output
summary(model_scar_density_region)
