ggplot(aes(pct_coral_cover_species))+
geom_histogram()
#checking that species percent cover does not have 0's
summary(transect_corallivory_diversity_df$pct_coral_cover_species)
#log-transformation normalized coral cover distribution
transect_corallivory_diversity_df %>%
ggplot(aes(log(pct_coral_cover_species)))+
geom_histogram()
#scar abundance per colony with poisson
n_grazed_diversity_poisson <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity+ coral_species+coral_species:log(proportional_cover)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
family=poisson,
data = transect_corallivory_diversity_df)
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_grazed_diversity_nbinom <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity+ coral_species+ coral_species:log(proportional_cover)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = transect_corallivory_diversity_df)
#likelihood ratio tests suggest NS difference between poisson and negative binomial
anova(n_grazed_diversity_poisson, n_grazed_diversity_nbinom)
#simulating residuals and evaluating model fit
n_grazed_diversity_poisson_residuals <- DHARMa::simulateResiduals(n_grazed_diversity_poisson, n = 10000, use.u = T)
n_grazed_diversity_nbinom_residuals <- DHARMa::simulateResiduals(n_grazed_diversity_nbinom, n = 10000, use.u = T)
plot(n_grazed_diversity_poisson_residuals) #diagnostic plot indicates no sign problems
#testing for overdispersion, zero inflation, and outliers
DHARMa::testDispersion(n_grazed_diversity_poisson_residuals, plot=FALSE) #no significant overdispersion
DHARMa::testZeroInflation(n_grazed_diversity_poisson) #NS zero inflation
DHARMa::testOutliers(n_grazed_diversity_poisson) #NS outliers
n_grazed_diversity_poisson %>% summary()
n_grazed_diversity_nbinom_ci <- confint(n_grazed_diversity_nbinom) %>%
as_tibble() %>%
select(-Estimate)
#tidying model output
transect_level_model_output <- n_grazed_diversity_nbinom %>%
tidy() %>%
bind_cols(n_grazed_diversity_nbinom_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(estimate_backtransformed = exp(estimate)) %>%
mutate(model="Colonies grazed") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5, estimate_backtransformed) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", "")) %>%
mutate(term=str_replace(term, "region", ""))
write_csv(transect_level_model_output, here("supplements/table_s5_transect_level_grazed_coral_abundance_results.csv"))
corallivory_by_diversity_fig <- transect_corallivory_diversity_df %>%
mutate(coral_species=factor(coral_species, levels = c("Orbicella annularis", "Branching Porites spp.", "Porites astreoides", "Siderastrea siderea"))) %>%
mutate(region= factor(region, levels = c("PanamÃ¡", "Florida",  "St. Croix", "Bonaire"))) %>%
ggplot(aes(x=coral_diversity, y=n_colonies_grazed, color=region))+
geom_point(alpha=0.6)+
scale_y_continuous(breaks = c(0,2,4,6,8,10),
labels= c(0,2,4,6,8,10),
limits=c(0,10.2))+
theme_bw()+
scale_color_manual(values=region_palette)+
scale_fill_manual(values=region_palette)+
facet_wrap(~coral_species)+
labs(x = "Coral diversity (H')",
y = expression(paste("Colonies grazed per 30 m" ^2)),
color="Region",
fill="Region")+
theme_bw()+
theme(legend.position = "top")
#reading in coral genus icons
branching_porties_image <- magick::image_read(path=here("figures_tables/reef_images", "Branching_porties.png"), density = NULL, depth = NULL, strip = TRUE)
orbicella_image <- magick::image_read(path=here("figures_tables/reef_images", "Orbicella_annularis.png"), density = NULL, depth = NULL, strip = TRUE)
porites_astreoides_image <- magick::image_read(path=here("figures_tables/reef_images", "Porites_astreoides.png"), density = NULL, depth = NULL, strip = TRUE)
siderastrea_image <- magick::image_read(path=here("figures_tables/reef_images", "Siderastrea_siderea.png"), density = NULL, depth = NULL, strip = TRUE)
#adding coral images to figure (image placement is off in R, but good in ggsave generated png)
corallivory_by_diversity_fig_final <- cowplot::ggdraw() +
draw_plot(corallivory_by_diversity_fig)+ #adds the plot (order matters to overlay the layers correctly)
draw_image(orbicella_image, x = -0.385, y = 0.29, scale=0.075)+
draw_image(branching_porties_image, x = 0.081, y = 0.29, scale=0.08)+
draw_image(porites_astreoides_image, x = -0.385, y = -0.113, scale=0.062)+
draw_image(siderastrea_image, x = 0.08, y = -0.11, scale=0.063)
#saving figure
ggsave(plot=corallivory_by_diversity_fig_final, filename=here("supplements/fig_s4_corallivory_by_coral_diversity.png"), width = 190, height = 140, dpi = 600, units = "mm")
corallivory_by_diversity_fig_final
proportion_grazed_model_output
scar_density_model_output <- scar_density_m1 %>%
broom.mixed::tidy() %>%
filter(term != "sd__Observation") %>%
bind_cols(scar_density_m1_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(estimate_backtransformed = case_when(term=="(Intercept)"~exp(estimate),
TRUE~as.double(100*(exp(estimate))))) %>%
mutate(model="Scar density") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5, estimate_backtransformed) %>%
mutate(across(where(is.double), ~round(.x, 3)))
scar_density_model_output
scar_density_model_output <- scar_density_m1 %>%
broom.mixed::tidy() %>%
filter(term != "sd__Observation") %>%
bind_cols(scar_density_m1_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(estimate_backtransformed = case_when(term=="(Intercept)"~exp(estimate),
TRUE~as.double((exp(estimate))))) %>%
mutate(model="Scar density") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5, estimate_backtransformed) %>%
mutate(across(where(is.double), ~round(.x, 3)))
scar_density_model_output
proportion_grazed_model_output
1.516^2
exp(0.416^2)
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_scars_col_level_nbinom <- glmmTMB::glmmTMB(n_new_scars ~ log(col_area_cm2) + coral_species + region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = coral_scar_df)
#scar abundance per colony with poisson
n_scars_col_level_poisson <- glmmTMB::glmmTMB(n_new_scars ~ log(col_area_cm2) + coral_species + region+
(1 | site/transect), #transects nested within sites within regions
family=poisson,
data = coral_scar_df)
#likelihood ratio test of model using poisson versus negative binomial distribution
anova(n_scars_col_level_poisson, n_scars_col_level_nbinom)
#simulating residuals and testing
n_scars_col_level_residuals <- DHARMa::simulateResiduals(n_scars_col_level_nbinom, n = 10000, use.u = T)
#testing for zero-inflation in negative binomial model: zero-inflation not significant
n_scars_col_level_zero_inf_test<- DHARMa::testZeroInflation(n_scars_col_level_residuals)
n_scars_col_level_zero_inf_test
DHARMa::testDispersion(n_scars_col_level_residuals, plot=FALSE) #no significant overdispersion
plot(n_scars_col_level_residuals) #NS overdispersion or outliers
#scar abundance per colony with poisson
n_scars_col_level_poisson <- glmmTMB::glmmTMB(n_new_scars ~ col_area_cm2 + coral_species + region+
(1 | site/transect), #transects nested within sites within regions
family=poisson,
data = coral_scar_df)
#scar abundance per colony with poisson
n_scars_col_level_poisson <- glmmTMB::glmmTMB(n_new_scars ~ col_area_cm2 + coral_species + region+
(1 | site/transect), #transects nested within sites within regions
family=poisson,
data = coral_scar_df)
n_scars_col_level_poisson %>% summary()
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_scars_col_level_nbinom <- glmmTMB::glmmTMB(n_new_scars ~ col_area_cm2 + coral_species + region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = coral_scar_df)
#scar abundance per colony with poisson
n_scars_col_level_poisson <- glmmTMB::glmmTMB(n_new_scars ~ col_area_cm2 + coral_species + region+
(1 | site/transect), #transects nested within sites within regions
family=poisson,
data = coral_scar_df)
n_scars_col_level_poisson %>% summary()
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_scars_col_level_nbinom <- glmmTMB::glmmTMB(n_new_scars ~ col_area_cm2 + coral_species + region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = coral_scar_df)
#simulating residuals and testing
n_scars_col_level_residuals <- DHARMa::simulateResiduals(n_scars_col_level_nbinom, n = 10000, use.u = T)
#model output
n_scars_col_level_nbinom %>% summary()
#likelihood ratio test of model using poisson versus negative binomial distribution
anova(n_scars_col_level_poisson, n_scars_col_level_nbinom)
n_scars_col_level_zero_inf_test
plot(n_scars_col_level_residuals) #NS overdispersion or outliers
#model output
n_scars_col_level_nbinom %>% summary()
#summary of mean number of new scars per colony by region
coral_scar_df %>%
group_by(region) %>%
dplyr::reframe(mean_n_new_scars=mean(n_new_scars)) %>%
mutate(mean_n_new_scars=round(mean_n_new_scars, 3))
coral_scar_df %>%
group_by(coral_species) %>%
reframe(mean_new_scars=mean(n_new_scars),
sem=sem(n_new_scars))
transect_corallivory_diversity_df
View(transect_corallivory_diversity_df)
n_grazed_diversity_nbinom_ci <- confint(n_grazed_diversity_nbinom) %>%
as_tibble() %>%
select(-Estimate)
#tidying model output
transect_level_model_output <- n_grazed_diversity_nbinom %>%
tidy() %>%
bind_cols(n_grazed_diversity_nbinom_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(estimate_backtransformed = exp(estimate)) %>%
mutate(model="Colonies grazed") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5, estimate_backtransformed) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", "")) %>%
mutate(term=str_replace(term, "region", ""))
write_csv(transect_level_model_output, here("supplements/table_s5_transect_level_grazed_coral_abundance_results.csv"))
corallivory_by_diversity_fig <- transect_corallivory_diversity_df %>%
mutate(coral_species=factor(coral_species, levels = c("Orbicella annularis", "Branching Porites spp.", "Porites astreoides", "Siderastrea siderea"))) %>%
mutate(region= factor(region, levels = c("PanamÃ¡", "Florida",  "St. Croix", "Bonaire"))) %>%
ggplot(aes(x=coral_diversity, y=n_colonies_grazed, color=region))+
geom_point(alpha=0.6)+
scale_y_continuous(breaks = c(0,2,4,6,8,10),
labels= c(0,2,4,6,8,10),
limits=c(0,10.2))+
theme_bw()+
scale_color_manual(values=region_palette)+
scale_fill_manual(values=region_palette)+
facet_wrap(~coral_species)+
labs(x = "Coral diversity (H')",
y = expression(paste("Colonies predated per 30 m" ^2)),
color="Region",
fill="Region")+
theme_bw()+
theme(legend.position = "top")
#reading in coral genus icons
branching_porties_image <- magick::image_read(path=here("figures_tables/reef_images", "Branching_porties.png"), density = NULL, depth = NULL, strip = TRUE)
orbicella_image <- magick::image_read(path=here("figures_tables/reef_images", "Orbicella_annularis.png"), density = NULL, depth = NULL, strip = TRUE)
porites_astreoides_image <- magick::image_read(path=here("figures_tables/reef_images", "Porites_astreoides.png"), density = NULL, depth = NULL, strip = TRUE)
siderastrea_image <- magick::image_read(path=here("figures_tables/reef_images", "Siderastrea_siderea.png"), density = NULL, depth = NULL, strip = TRUE)
#adding coral images to figure (image placement is off in R, but good in ggsave generated png)
corallivory_by_diversity_fig_final <- cowplot::ggdraw() +
draw_plot(corallivory_by_diversity_fig)+ #adds the plot (order matters to overlay the layers correctly)
draw_image(orbicella_image, x = -0.385, y = 0.29, scale=0.075)+
draw_image(branching_porties_image, x = 0.081, y = 0.29, scale=0.08)+
draw_image(porites_astreoides_image, x = -0.385, y = -0.113, scale=0.062)+
draw_image(siderastrea_image, x = 0.08, y = -0.11, scale=0.063)
#saving figure
ggsave(plot=corallivory_by_diversity_fig_final, filename=here("supplements/fig_s4_corallivory_by_coral_diversity.png"), width = 190, height = 140, dpi = 600, units = "mm")
corallivory_by_diversity_fig_final
proportion_grazed_model_output
scar_density_model_output
scar_density_model_output <- scar_density_m1 %>%
broom.mixed::tidy() %>%
filter(term != "sd__Observation") %>%
bind_cols(scar_density_m1_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Scar density") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3)))
scar_density_model_output
table_s4 <- scar_density_model_output %>%
bind_rows(proportion_grazed_model_output)
proportion_grazed_model_output
proportion_grazed_model_output <- proportion_grazed_m1 %>%
broom.mixed::tidy() %>%
filter(term != "sd__Observation") %>%
bind_cols(proportion_grazed_m1_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Percent grazed") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3)))
proportion_grazed_model_output
table_s4 <- scar_density_model_output %>%
bind_rows(proportion_grazed_model_output)
table_s4
write_csv(table_s4, here("supplements/table_s4_site_level_glmm_results.csv"))
#viewing model results
proportion_grazed_m2 %>% summary()
#viewing model results
scar_density_m2 %>% summary()
n_grazed_diversity_nbinom
#tidying model output
transect_level_model_output <- n_grazed_diversity_nbinom %>%
tidy() %>%
bind_cols(n_grazed_diversity_nbinom_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Colonies grazed") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", "")) %>%
mutate(term=str_replace(term, "region", ""))
transect_level_model_output
TRUE~as.double(estimate))
transect_level_model_output %>%
mutate(estimate_backtransformed = case_when(term!="Branching Porites spp.:log(proportional_cover)"~exp(estimate),
TRUE~as.double(estimate)))
exp(0.764)
exp(10.764)
exp(-0.764)
#tidying model output
transect_level_model_output <- n_grazed_diversity_nbinom %>%
tidy() %>%
bind_cols(n_grazed_diversity_nbinom_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Colonies grazed") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", "")) %>%
mutate(term=str_replace(term, "region", ""))
transect_level_model_output
write_csv(transect_level_model_output, here("supplements/table_s5_transect_level_grazed_coral_abundance_results.csv"))
#tidying model output
n_scars_col_level_model_output <- n_scars_col_level_nbinom %>%
tidy() %>%
bind_cols(n_scars_col_level_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Scar abundance") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", ""))
set.seed(1945) #for reproducible results from random simulations of residuals
#scar abundance per colony with poisson
n_scars_col_level_poisson <- glmmTMB::glmmTMB(n_new_scars ~ col_area_cm2 + coral_species + region+
(1 | site/transect), #transects nested within sites within regions
family=poisson,
data = coral_scar_df)
n_scars_col_level_poisson %>% summary()
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_scars_col_level_nbinom <- glmmTMB::glmmTMB(n_new_scars ~ col_area_cm2 + coral_species + region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = coral_scar_df)
#likelihood ratio test of model using poisson versus negative binomial distribution
anova(n_scars_col_level_poisson, n_scars_col_level_nbinom)
#simulating residuals and testing
n_scars_col_level_residuals <- DHARMa::simulateResiduals(n_scars_col_level_nbinom, n = 10000, use.u = T)
#tidying model output and calculating confidence intervals
n_scars_col_level_ci <- confint(n_scars_col_level_nbinom) %>%
as_tibble() %>%
select(-Estimate)
#tidying model output
n_scars_col_level_model_output <- n_scars_col_level_nbinom %>%
tidy() %>%
bind_cols(n_scars_col_level_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Scar abundance") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", ""))
n_scars_col_level_model_output
#back transforming estimated effect sizes (see paper supplements for description)
n_scars_col_level_model_output %>%
mutate(estimate_backtransformed = exp(estimate))
n_scars_col_level_model_output
write_csv(n_scars_col_level_model_output, here("supplements/table_s6_colony_level_scar_abundance_results.csv"))
set.seed(1945) #for reproducible results from random simulations of residuals
mean_scar_size <- glmmTMB::glmmTMB(log(mean_scar_area_cm2) ~ log(col_area_cm2) + coral_species + region+
(1 | site/transect), #transects nested within sites within regions
family=gaussian,
data = predated_colonies_subset)
predated_colonies_subset <- coral_scar_df %>%
mutate(pct_grazed=total_grazed_cm2/col_area_cm2*100) %>%
filter(n_new_scars>0) %>%
#organizing as factor so the Branching Porites spp. cat is grouped with P. astreoides
mutate(coral_species=factor(coral_species, levels = c("Agaricia agaricites", "Agaricia humilis", "Agaricia tenuifolia", "Agaricia spp.", "Madracis auretenra", "Madracis decactis", "Orbicella annularis", "Orbicella faveolata", "Branching Porites spp.", "Porites astreoides", "Siderastrea siderea", "Stephanocoenia intersepta"))) %>%
mutate(region= factor(region, levels = c("PanamÃ¡", "Florida",  "St. Croix", "Bonaire")))
mean_scar_size <- glmmTMB::glmmTMB(log(mean_scar_area_cm2) ~ log(col_area_cm2) + coral_species + region+
(1 | site/transect), #transects nested within sites within regions
family=gaussian,
data = predated_colonies_subset)
mean_scar_size_col_level_model_output
#back transforming estimated effect sizes (see paper supplements for description)
mean_scar_size_col_level_model_output %>%
#exponentiating all independent variables except proportional cover, which was log transformed
mutate(estimate_backtransformed = case_when(term!="log(col_area_cm2)"~exp(estimate),
TRUE~as.double(estimate)))
mean_scar_size_col_level_model_output <- mean_scar_size_no_outliers %>%
tidy() %>%
filter(term != "sd__Observation") %>%
bind_cols(mean_scar_size_col_level_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(estimate_backtransformed = case_when(term=="(Intercept)"~exp(estimate),
term=="log(col_area_cm2)"~(estimate),
TRUE~as.double((exp(estimate))))) %>%
mutate(model="Colony-level mean scar size") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5, estimate_backtransformed) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", ""))
mean_scar_size_col_level_ci <- confint(mean_scar_size) %>%
as_tibble() %>%
select(-Estimate)
mean_scar_size_col_level_model_output <- mean_scar_size %>%
tidy() %>%
filter(term != "sd__Observation") %>%
bind_cols(mean_scar_size_col_level_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Colony-level mean scar size") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", ""))
#back transforming estimated effect sizes (see paper supplements for description)
mean_scar_size_col_level_model_output %>%
#exponentiating all independent variables except proportional cover, which was log transformed
mutate(estimate_backtransformed = case_when(term!="log(col_area_cm2)"~exp(estimate),
TRUE~as.double(estimate)))
mean_scar_size_col_level_model_output
write_csv(mean_scar_size_col_level_model_output, here("supplements/table_s7_colony_level_mean_scar_size_results.csv"))
pct_grazed_col_level_model_output <- pct_grazed %>%
tidy() %>%
filter(term != "sd__Observation") %>%
bind_cols(pct_grazed_col_level_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Colony-level percent coral grazed") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", ""))
pct_grazed_col_level_ci <- confint(pct_grazed) %>%
as_tibble() %>%
select(-Estimate)
pct_grazed <- glmmTMB::glmmTMB(log(pct_grazed) ~ log(col_area_cm2) + coral_species + region+
(1 | site/transect), #transects nested within sites within regions
family=gaussian,
data = predated_colonies_subset)
pct_grazed_col_level_ci <- confint(pct_grazed) %>%
as_tibble() %>%
select(-Estimate)
pct_grazed_col_level_model_output <- pct_grazed %>%
tidy() %>%
filter(term != "sd__Observation") %>%
bind_cols(pct_grazed_col_level_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Colony-level percent coral grazed") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", ""))
#back transforming estimated effect sizes (see paper supplements for description)
mean_scar_size_col_level_model_output %>%
#exponentiating all independent variables except coral area, which was log transformed
mutate(estimate_backtransformed = case_when(term!="log(col_area_cm2)"~exp(estimate),
TRUE~as.double(estimate)))
#back transforming estimated effect sizes (see paper supplements for description)
mean_scar_size_col_level_model_output %>%
#exponentiating all independent variables except coral area, which was log transformed
mutate(estimate_backtransformed = case_when(term!="log(col_area_cm2)"~exp(estimate),
TRUE~as.double(estimate))) %>%
mutate(across(where(is.double), ~round(.x, 3)))
pct_grazed_col_level_model_output <- pct_grazed %>%
tidy() %>%
filter(term != "sd__Observation") %>%
bind_cols(pct_grazed_col_level_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Colony-level percent coral grazed") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", ""))
write_csv(pct_grazed_col_level_model_output,  here("supplements/table_s8_colony_level_percent_coral_grazed_results.csv"))
n_grazed_diversity_poisson %>% summary()
#viewing model results
proportion_grazed_m2 %>% summary()
#checking model results
mean_scar_size %>% summary()
1.57e-02
#model results
pct_grazed %>% summary()
1.181e+00
9.53e-01
if (!require(doParallel)) install.packages("doParallel")
if (!require(here)) install.packages("here")
if (!require(purrr)) install.packages("purrr")
if (!require(tidyverse)) install.packages("tidyverse")
packages <- c("doParallel", "here", "purrr", "tidyverse")
sapply(packages, require, character.only = T)
scar_df_bites <- read_csv(here("data/regional_coral_scar_data.csv")) %>% filter(percent_new>0)
test <- read_csv(here("data/regional_coral_scar_data.csv"))
test
test
test %>% distinct(coral_species)
test2 <- test %>% distinct(coral_species) %>% mutate(case_when(coral_species=="Helioceris cucullata"~"Helioseris cucullata",
TRUE~as.character(coral_species)))
test2 <- test %>% mutate(case_when(coral_species=="Helioceris cucullata"~"Helioseris cucullata",
TRUE~as.character(coral_species)))
test2 %>% distinct(coral_species)
test2 <- test %>% mutate(coral_species=case_when(coral_species=="Helioceris cucullata"~"Helioseris cucullata",
TRUE~as.character(coral_species)))
test2 %>% distinct(coral_species)
read_csv(here("data/regional_coral_scar_data.csv"))
test2
write_csv(test2, (here("data/regional_coral_scar_data.csv")))
write.csv(test2, here("data/regional_coral_scar_data.csv"),
fileEncoding = "UTF-8",
row.names=FALSE)
test <- read_csv(here("data/bootstrapped_new_scar_data.csv"))
test
test2 <- test %>% mutate(coral_species=case_when(coral_species=="Helioceris cucullata"~"Helioseris cucullata",
TRUE~as.character(coral_species)))
test2
test2 %>% distinct(coral_species)
write.csv(test2, here("data/bootstrapped_new_scar_data.csv"),
fileEncoding = "UTF-8",
row.names=FALSE)
if (!require(here)) install.packages("here")
if (!require(tidyverse)) install.packages("tidyverse")
packages <- c("here", "tidyverse")
sapply(packages, require, character.only = T)
coral_scar_df <- read.csv(here("data/regional_coral_scar_data.csv"), fileEncoding = "UTF-8")
coral_scar_df %>% distinct(coral_species)
read_csv(here("data/processed_coral_scar_data_colony_level.csv"))
read_csv(here("data/processed_coral_scar_data_colony_level.csv")) %>% distinct(coral_species)
