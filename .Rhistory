packages <- c("broom", "broom.mixed", "cowplot", "DHARMa", "electivity", "ggpp", "ggpubr", "ggridges", "glmmTMB", "here", "janitor", "magick", "moderndive", "tidyverse")
sapply(packages, require, character.only = T)
fish_df <- read_csv(here("data/regional_fish_data.csv")) %>%
mutate(region= factor(region, levels = c("Panamá", "Florida",  "St. Croix", "Bonaire")))
coral_scar_df <- read.csv(here("data/processed_coral_scar_data_colony_level.csv"),
fileEncoding = "UTF-8") %>% #UTF-8 is compatible with accents/tildes
mutate(region= factor(region, levels = c("Panamá", "Florida", "St. Croix", "Bonaire")))
site_coordinates <- read.csv(here("data/site_coordinates.csv"),
fileEncoding = "UTF-8") %>%
mutate(region= factor(region, levels = c("Panamá", "Florida", "St. Croix", "Bonaire")))
n_coral_surveys <- coral_scar_df %>%
group_by(region, site) %>%
distinct(transect) %>%
dplyr::reframe(n_coral_surveys=n())
n_surveys <- fish_df %>%
group_by(region, site) %>%
distinct(transect) %>%
dplyr::reframe(n_fish_surveys=n()) %>%
left_join(n_coral_surveys, by = join_by(region, site))
table_s1 <- site_coordinates %>%
left_join(n_surveys)
write.csv(table_s1,
here("supplements/table_s1_site_coordinates_sample_size.csv"),
fileEncoding = "UTF-8",
row.names=FALSE)
# Transect-level summary of fish density
major_corallivores_df <- fish_df %>%
filter(species %in% c("Scarus taeniopterus", "Scarus vetula", "Sparisoma viride")) %>%
group_by(region, site, date, transect, depth_m, survey_l_m, survey_w_m) %>%
dplyr::reframe(n_major_corallivores=n())
#merging data in transect-level summary of parrotfish denisty
pf_density_transect <- fish_df %>%
select(region, site, date, transect, depth_m, survey_l_m, survey_w_m) %>%
mutate(survey_area_m2=survey_l_m*survey_w_m) %>% #summarizing transect metadata
distinct() %>%
left_join(major_corallivores_df) %>% #adding in fish data
mutate(n_major_corallivores = replace_na(n_major_corallivores, 0), #replacing NA with 0 for surveys with no parrotfishes
density_major_corallivores = n_major_corallivores/survey_area_m2*100) %>% # calculating density (fish/100 m2)
ungroup()
# Site-level summary of fish density
pf_density_site<- pf_density_transect %>%
group_by(region, site) %>%
dplyr::reframe(mean_density_major_corallivores=mean(density_major_corallivores)) %>%
ungroup()
#function to calculate the standard error of the mean
sem <- function(x) {
sd(x, na.rm=TRUE)/sqrt(sum(!is.na(x)))
}
# Region-level summary of fish density
regional_parrotfish_density <- pf_density_site %>%
group_by(region) %>%
dplyr::reframe(mean_density_major=mean(mean_density_major_corallivores),
sem_major=sem(mean_density_major_corallivores))
#creating  df for Panamá data only (b/c in this region fish size was recorded in 5cm bins)
PAN_fish_df <- fish_df %>%
filter(region=="Panamá")
PAN_fish_df %>%
distinct(size_cm) #checking distinct of size distributions bins
#creating seperate df for all other regions, where fish size was recorded to the nearest cm
OTHER_fish_df <- fish_df %>%
filter(region %in% c("Florida", "St. Croix", "Bonaire")) %>%
mutate(size_cm=as.double(size_cm))
range(OTHER_fish_df$size_cm) #checking range of size distributions
# creating a combined df of fish surveys with size in 5cm bins to compare across regions
binned_fish_sizes <- OTHER_fish_df %>% #binning fish sizes to pair with Panamá data
mutate(size_cm=case_when(size_cm>=15 & size_cm<20 ~ "15 to 20",
size_cm>=20 & size_cm<25 ~ "20 to 25",
size_cm>=25 & size_cm<30 ~ "25 to 30",
size_cm>=30 & size_cm<35 ~ "30 to 35",
size_cm>=35 & size_cm<40 ~ "35 to 40")) %>%
bind_rows(PAN_fish_df) %>% #adding panama data
filter(species!="No parrotfishes") %>% #removing transects with no parrotfishes observed
mutate(size_cm= factor(size_cm, levels = c("15 to 20", "20 to 25", "25 to 30", "30 to 35", "35 to 40"))) %>%
mutate(region= factor(region, levels = c("Panamá", "Florida",  "St. Croix", "Bonaire"))) %>%
filter(species %in% c("Scarus taeniopterus", "Scarus vetula", "Sparisoma viride")) #major corallivores
# First step of transect-level summary of fish density by species and size bin
#This df doesn't account for 0 observations, that's done in the next section
pf_by_size_species_df_temp <- binned_fish_sizes %>%
group_by(region, site, date, transect, depth_m, species, size_cm) %>%
dplyr::reframe(n=n())
# transect-level summary of fish density by species and size bin
size_cm <- c("15 to 20", "20 to 25", "25 to 30", "30 to 35", "35 to 40")
species <- c("Scarus taeniopterus", "Scarus vetula", "Sparisoma viride")
pf_by_transect_size_species_df <- fish_df %>%
mutate(survey_area_m2=survey_l_m*survey_w_m) %>% #summarizing transect metadata
select(region, site, date, transect, depth_m, survey_area_m2) %>%
distinct() %>% #filtering to only keep distinct transect metadata
tidyr::crossing(species, size_cm) %>% #adding all unique combos of transects, species, and size bins
left_join(pf_by_size_species_df_temp) %>% #adding in all observations of species abundance by size bins
mutate(n=replace_na(n, 0)) #adding 0s for instances where a given species and size was not observed in a transect
# site-level summary of fish density by species and size bin
pf_by_site_size_species_df <- pf_by_transect_size_species_df %>%
dplyr::mutate(pf_density_100m2 = n/survey_area_m2*100) %>% #summarizing density (n/100 m2)
group_by(region, site, species, size_cm) %>%
dplyr::reframe(mean_pf_density_100m2=mean(pf_density_100m2)) %>%
ungroup()
# region-level summary of fish density by species and size bin
pf_by_region_size_species_df <- pf_by_transect_size_species_df %>%
dplyr::mutate(pf_density_100m2 = n/survey_area_m2*100) %>% #summarizing density (n/100 m2)
group_by(region, species, size_cm) %>%
dplyr::reframe(mean_pf_density_100m2=mean(pf_density_100m2)) %>%
ungroup()
# Transect and genus-level summary of coral data
coral_transect_and_genus <- coral_scar_df %>%
mutate(coral_genus=gsub("\\s.*", "", coral_species),
coral_genus=case_when(coral_genus=="Branching"~"Porites",
TRUE~as.character(coral_genus))) %>%
mutate(proportion_grazed=total_grazed_cm2/col_area_cm2) %>%
group_by(region, site, transect, depth_m, coral_genus) %>%
dplyr::reframe(genus_total_col_area_cm2=sum(col_area_cm2),
genus_total_scar_area_cm2=sum(total_grazed_cm2),
genus_total_n_scars=sum(n_new_scars),
mean_proportion_grazed=mean(proportion_grazed)) %>%
mutate(pct_coral_cover_by_genera=(genus_total_col_area_cm2/300000)*100,
scars_m2_coral_by_genera=genus_total_n_scars/(genus_total_col_area_cm2/10000),
pct_coral_grazed_by_genera=(genus_total_scar_area_cm2/genus_total_col_area_cm2)*100) %>%
ungroup()
# Transect-level summary of coral data
coral_transect <- coral_scar_df %>%
mutate(proportion_grazed=total_grazed_cm2/col_area_cm2) %>%
group_by(region, site, transect, depth_m) %>%
dplyr::reframe(total_col_area_cm2=sum(col_area_cm2),
total_scar_area_cm2=sum(total_grazed_cm2),
total_n_scars=sum(n_new_scars),
mean_proportion_grazed=mean(proportion_grazed),
n_colonies=n()) %>%
mutate(pct_coral_cover=(total_col_area_cm2/300000)*100,
scars_m2_coral=total_n_scars/(total_col_area_cm2/10000),
pct_coral_grazed=(total_scar_area_cm2/total_col_area_cm2)*100) %>%
ungroup()
# Site-level summary of coral data
coral_site <- coral_transect %>%
group_by(region, site) %>%
dplyr::reframe(mean_pct_coral_cover=mean(pct_coral_cover),
sem_coral_cover=sem(pct_coral_cover),
mean_pct_coral_grazed=mean(pct_coral_grazed),
sem_pct_grazed=sem(pct_coral_grazed),
mean_scars_m2_coral= mean(scars_m2_coral),
sem_scar_density=sem(scars_m2_coral)) %>%
ungroup()
# Regional summary of coral data
regional_coral_scar_patterns <- coral_site %>%
group_by(region) %>%
dplyr::reframe(mean_coral_cover=mean(mean_pct_coral_cover),
sem_cover=sem(mean_pct_coral_cover),
mean_scar_density=mean(mean_scars_m2_coral),
sem_density=sem(mean_scars_m2_coral),
mean_coral_area_grazed=mean(mean_pct_coral_grazed),
sem_area_grazed=sem(mean_pct_coral_grazed))
# Regional summary mean scar size for grazed colonies
mean_scar_size_by_region <- coral_scar_df %>%
filter(mean_scar_area_cm2>0) %>%
group_by(region) %>%
dplyr::reframe(mean_scar_size_cm2=mean(mean_scar_area_cm2), #regional mean calculated from mean scar size per colony with grazing scars
sem_scar_size=sem(mean_scar_area_cm2))
fish_corals_site_level <- coral_site %>%
left_join(pf_density_site) %>%
mutate(region= factor(region, levels = c("Panamá", "Florida",  "St. Croix", "Bonaire")))
parrotfish_palette <- c("#6DF3DC", "#4BCAB0", "#0D8A87", "#014D4E")
coral_palette <- c("#EF977F", "#DA5849", "#C92741", "#9E1831")
region_palette <- c("#00B1EA", "#FE4248", "#8266FF", "#520E44")
regional_parrotfish_coral_scar_summary <- regional_parrotfish_density %>%
left_join(regional_coral_scar_patterns, by = join_by(region)) %>%
left_join(mean_scar_size_by_region, by = join_by(region)) %>%
mutate_at(2:7, round, 1) %>%
mutate_at(8:11, round, 3)
write.csv(regional_parrotfish_coral_scar_summary, here("figures_tables/table1_regional_patterns.csv"),
fileEncoding = "UTF-8",
row.names=FALSE)
regional_vars_graph_df <- pf_density_transect %>%
group_by(region, site) %>%
dplyr::reframe(pf_n_100m2_major=mean(density_major_corallivores),
sem_major_corallivores=plotrix::std.error(density_major_corallivores)) %>%
left_join(coral_site, by = join_by(region, site))
#summarizing data for visualization
regional_vars_graph_df <- pf_density_transect %>%
group_by(region, site) %>%
dplyr::reframe(pf_n_100m2_major=mean(density_major_corallivores),
sem_major_corallivores=plotrix::std.error(density_major_corallivores)) %>%
left_join(coral_site, by = join_by(region, site))
#Fig 2a) parrotfish density patterns
fig2a_parrotfish_density <- ggplot()+
geom_point(data=pf_density_transect, aes(y=fct_rev(site), x=density_major_corallivores, color=region), alpha=0.5)+
geom_pointrange(data=regional_vars_graph_df,
aes(y = fct_rev(site),
x=pf_n_100m2_major,
xmin=pf_n_100m2_major-sem_major_corallivores,
xmax=pf_n_100m2_major+sem_major_corallivores,
fill=region),
color="black", pch=21, size=0.5)+
scale_x_continuous(limits = c(0, 17), expand = c(0.025, 0)) +
scale_color_manual(values = parrotfish_palette) +
scale_fill_manual(values = parrotfish_palette) +
facet_grid(rows = vars(region), scales = "free_y", switch = "y", space = "free") +
labs(title = "a",  x = expression(paste("Major corallivores (n 100 ", m^-2, ")"))) +
theme_bw()+
theme(axis.title.x = element_text(margin = margin(t = 1.1, r = 0, b = 0, l = 0, unit = "mm")),
plot.title = element_text(size = 12, face = "bold"),
strip.text.y = element_text(angle = 270, face = "bold"),
strip.placement = "outside",
axis.title.y = element_blank(),
strip.text = element_text(size = 10, margin = margin(t = 1.5, r = 1.5, b = 1.5, l = 1.5, unit = "mm")),
axis.text = element_text(size = 10),
legend.position = "none")
#Fig 2b) coral cover patterns
fig2b_coral_cover <- ggplot() +
geom_point(data=coral_transect, aes(y=fct_rev(site), x=pct_coral_cover, color=region), alpha=0.5)+
geom_pointrange(data=regional_vars_graph_df,
aes(y = fct_rev(site),
x=mean_pct_coral_cover,
xmin=mean_pct_coral_cover-sem_coral_cover,
xmax=mean_pct_coral_cover+sem_coral_cover,
fill=region),
color="black", pch=21, size=0.5)+
scale_x_continuous(limits = c(0, 65), expand = c(0.025, 0)) +
scale_fill_manual(values = coral_palette) +
scale_color_manual(values = coral_palette) +
facet_grid(rows = vars(region), scales = "free_y", switch = "y", space = "free") +
labs(title = "b", x = "Target coral cover (%)") +
theme_bw()+
theme(axis.title.x = element_text(margin = margin(t = 2.2, r = 0, b = 0.8, l = 0, unit = "mm")),
plot.title = element_text(size = 12, face = "bold"),
plot.margin = margin(0.2, 0.2, 0.2, 0.2, unit = "cm"),
strip.background = element_blank(),
strip.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x = element_text(size = 10),
legend.position = "none")
# Fig 2c) scar density patterns w/ log transformation
# log transformed +0.1 to visualize patterns across regions better given extremely high corallivory intensity in Florida
fig2c_scar_density_transformed <- ggplot() +
#transect-level data contain 0's. To visualize with a log-transformed scale, 0.1 is added
geom_point(data=coral_transect, aes(y=fct_rev(site), x=(scars_m2_coral+0.1), color=region), alpha=0.5)+
#adding 0.1 to site means to transform in the same way as the transect-level data and b/c there are two sites w/ >0 but <1 densities and when the SEM is subtracted these values become negative. The transfomation sets the bounds of the SEM at 0 for visualization purposes.
geom_pointrange(data=regional_vars_graph_df,
aes(y = fct_rev(site),
x=(mean_scars_m2_coral+0.1),
xmin=(mean_scars_m2_coral+0.1)-sem_scar_density,
xmax=(mean_scars_m2_coral+0.1)+sem_scar_density,
fill=region),
color="black", pch=21, size=0.5)+
scale_x_continuous(trans = scales::log_trans(),
breaks= c(0.1, 1, 5, 25, 100, 250),
labels= c("0", 1, 5, 25, 100, 250)
)+
scale_fill_manual(values = coral_palette) + #specified hex codes for plot colors
scale_color_manual(values = coral_palette) + #specified hex codes for plot colors
facet_grid(rows = vars(region), scales = "free_y", switch = "y", space = "free") +
labs(title = "c", x = expression(paste("Scar density (n ", m^-2, " coral)")))+
theme_bw()+
theme(axis.title.x = element_text(margin = margin(t = 1.1, r = 0, b = 0, l = 0, unit = "mm")),
plot.title = element_text(size = 12, face = "bold"),
strip.text.y = element_text(angle = 270, face = "bold"),
strip.placement = "outside",
axis.title.y = element_blank(),
strip.text = element_text(size = 10, margin = margin(t = 1.5, r = 1.5, b = 1.5, l = 1.5, unit = "mm")),
axis.text = element_text(size = 10),
legend.position = "none")
##Fig 2c) scar density patterns (not on a log transformed scale)
# fig2c_scar_density <- ggplot() +
#   geom_point(data=coral_transect, aes(y=fct_rev(site), x=scars_m2_coral, color=region), alpha=0.5)+
#   geom_pointrange(data=regional_vars_graph_df,
#                   aes(y = fct_rev(site),
#                       x=mean_scars_m2_coral,
#                       xmin=mean_scars_m2_coral-sem_scar_density,
#                       xmax=mean_scars_m2_coral+sem_scar_density,
#                       fill=region),
#                   color="black", pch=21, size=0.5)+
#   scale_x_continuous(limits = c(0, 268), expand = c(0.025, 0)) +
#   scale_fill_manual(values = coral_palette) + #specified hex codes for plot colors
#   scale_color_manual(values = coral_palette) + #specified hex codes for plot colors
#   facet_grid(rows = vars(region), scales = "free_y", switch = "y", space = "free") +
#   labs(title = "c", x = expression(paste("Scar density (n ", m^-2, " coral)")))+
#   theme_bw()+
#   theme(axis.title.x = element_text(margin = margin(t = 1.1, r = 0, b = 0, l = 0, unit = "mm")),
#         plot.title = element_text(size = 12, face = "bold"),
#         strip.text.y = element_text(angle = 270, face = "bold"),
#         strip.placement = "outside",
#         axis.title.y = element_blank(),
#         strip.text = element_text(size = 10, margin = margin(t = 1.5, r = 1.5, b = 1.5, l = 1.5, unit = "mm")),
#         axis.text = element_text(size = 10),
#         legend.position = "none")
#Fig 2d) percent coral grazed patterns
# log transformed +0.01 to visualize patterns across regions better given extremely high corallivory intensity in Florida
#used log +0.01 instead of 0.1 because the percent predated had a far smaller range of values (up to ~1.5%) compared to density (up to ~250)
fig2d_percent_scar_area_transformed <- ggplot() +
geom_point(data=coral_transect, aes(y=fct_rev(site), x=(pct_coral_grazed+0.01), color=region), alpha=0.5)+
geom_pointrange(data=regional_vars_graph_df,
aes(y = fct_rev(site),
x=(mean_pct_coral_grazed+0.01),
xmin=(mean_pct_coral_grazed+0.01)-sem_pct_grazed,
xmax=(mean_pct_coral_grazed+0.01)+sem_pct_grazed,
fill=region),
color="black", pch=21, size=0.5)+
scale_x_continuous(trans = scales::log_trans(),
breaks= c(0.01, 0.05, 0.1, 0.25, 0.5, 1),
labels= c("0", 0.05, 0.1, 0.25, 0.5, 1)
)+
scale_fill_manual(values = coral_palette) +
scale_color_manual(values = coral_palette) +
facet_grid(rows = vars(region), scales = "free_y", switch = "y", space = "free") +
labs(title = "d", x = "Coral area predated (%)") +
theme_bw()+
theme(axis.title.x = element_text(margin = margin(t = 2.2, r = 0, b = 0.8, l = 0, unit = "mm")),
plot.title = element_text(size = 12, face = "bold"),
plot.margin = margin(0.2, 0.2, 0.2, 0.2, unit = "cm"),
strip.background = element_blank(),
strip.text.y = element_blank(),
axis.title.y = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x = element_text(size = 10),
legend.position = "none")
##Fig 2d) percent coral grazed patterns (not on a log transformed scale)
# fig2d_percent_scar_area <- ggplot() +
#   geom_point(data=coral_transect, aes(y=fct_rev(site), x=pct_coral_grazed, color=region), alpha=0.5)+
#   geom_pointrange(data=regional_vars_graph_df,
#                   aes(y = fct_rev(site),
#                       x=mean_pct_coral_grazed,
#                       xmin=mean_pct_coral_grazed-sem_pct_grazed,
#                       xmax=mean_pct_coral_grazed+sem_pct_grazed,
#                       fill=region),
#                   color="black", pch=21, size=0.5)+
#   scale_x_continuous(limits = c(0, 1.5), expand = c(0.025, 0)) +
#   scale_fill_manual(values = coral_palette) +
#   scale_color_manual(values = coral_palette) +
#   facet_grid(rows = vars(region), scales = "free_y", switch = "y", space = "free") +
#   labs(title = "d", x = "Coral area predated (%)") +
#   theme_bw()+
#   theme(axis.title.x = element_text(margin = margin(t = 2.2, r = 0, b = 0.8, l = 0, unit = "mm")),
#         plot.title = element_text(size = 12, face = "bold"),
#         plot.margin = margin(0.2, 0.2, 0.2, 0.2, unit = "cm"),
#         strip.background = element_blank(),
#         strip.text.y = element_blank(),
#         axis.title.y = element_blank(),
#         axis.text.y=element_blank(),
#         axis.ticks.y=element_blank(),
#         axis.text.x = element_text(size = 10),
#         legend.position = "none")
#reading in coral and parrotfish icon for figure graphics
coral_icon <- orbicella_image <- magick::image_read(path=here("figures_tables/reef_images", "Orbicella_annularis.png"), density = NULL, depth = NULL, strip = TRUE)
corallivory_icon <- orbicella_image <- magick::image_read(path=here("figures_tables/reef_images", "Orbicella_annularis_grazed.png"), density = NULL, depth = NULL, strip = TRUE)
major_corallivore_icon <- magick::image_read(path=here("figures_tables/reef_images", "Major_corallivores.png"), density = NULL, depth = NULL, strip = TRUE)
#Combining individual graph into one: top panel (a-b)
fig2a_b <- ggpubr::ggarrange(fig2a_parrotfish_density, fig2b_coral_cover,
ncol=2,
widths=c(1.48, 1), #so graph widths are same size
align = "h")
#adding parrotfish and coral graphics to base figure
fig2a_b_with_graphics <- cowplot::ggdraw() +
draw_plot(fig2a_b)+ #adds the plot (order matters to overlay the layers correctly)
draw_image(major_corallivore_icon,  x = 0.027, y = 0.379, scale=0.1) + #adds the major pf icon
draw_image(coral_icon, x = 0.45, y = 0.379, scale=0.08) #adds the coral
#bottom panel (c-d)
fig2c_d <- ggpubr::ggarrange(fig2c_scar_density_transformed,
fig2d_percent_scar_area_transformed,
ncol=2,
widths=c(1.48, 1), #adjusting graph widths to be the same size
align = "h")
#adding corallivory graphics to base figure
fig2c_d_with_graphics <- cowplot::ggdraw() +
draw_plot(fig2c_d)+ #adds the plot (order matters to overlay the layers correctly)
draw_image(corallivory_icon,  x = 0.05, y = 0.379, scale=0.08)+ #adds the coral
draw_image(corallivory_icon,  x = 0.45, y = 0.379, scale=0.08) #adds the coral to e
#combining figure into a four panel plot
fig2_final <- ggpubr::ggarrange(fig2a_b_with_graphics,
fig2c_d_with_graphics,
nrow=2,
align = "h")
ggsave(plot=fig2_final,
filename=here("figures_tables/fig2_site_level_patterns.jpg"),
width = 215, height = 250, dpi = 600, units = "mm")
pf_by_site_size_species_df
pf_by_site_size_species_df %>% rstatix::levene_test(mean_pf_density_100m2 ~ region+size_cm)
pf_by_site_size_species_df %>% rstatix::levene_test(mean_pf_density_100m2 ~ region)
pf_by_site_size_species_df
hist(pf_by_site_size_species_df$mean_pf_density_100m2)
pf_by_site_size_species_df %>% rstatix::levene_test(sqrt(mean_pf_density_100m2) ~ region) #data violate homogeneity of variance assumption
hist(sqrt(pf_by_site_size_species_df$mean_pf_density_100m2))
hist(log(pf_by_site_size_species_df$mean_pf_density_100m2+1))
hist((pf_by_site_size_species_df$mean_pf_density_100m2))
# site-level summary of fish density by size bin
pf_by_site_size_species_df <- pf_by_transect_size_species_df %>%
dplyr::mutate(pf_density_100m2 = n/survey_area_m2*100) %>% #summarizing density (n/100 m2)
group_by(region, site, size_cm) %>%
dplyr::reframe(mean_pf_density_100m2=mean(pf_density_100m2)) %>%
ungroup()
# site-level summary of fish density by size bin (does not include species)
pf_by_site_size_species_df <- pf_by_transect_size_species_df %>%
dplyr::mutate(pf_density_100m2 = n/survey_area_m2*100) %>% #summarizing density (n/100 m2)
group_by(region, site, size_cm) %>%
dplyr::reframe(mean_pf_density_100m2=mean(pf_density_100m2)) %>%
ungroup()
# site-level summary of fish density by size bin (does not include species)
pf_by_site_size_df <- pf_by_transect_size_species_df %>%
dplyr::mutate(pf_density_100m2 = n/survey_area_m2*100) %>% #summarizing density (n/100 m2)
group_by(region, site, size_cm) %>%
dplyr::reframe(mean_pf_density_100m2=mean(pf_density_100m2)) %>%
ungroup()
pf_by_site_size_df
pf_by_region_size_species_df
pf_by_site_size_df
aov(mean_pf_density_100m2~size_cm+region,data=pf_by_site_size_df)
test <- aov(mean_pf_density_100m2~size_cm+region,data=pf_by_site_size_df)
summary(test)
test <- aov(mean_pf_density_100m2~size_cm*region,data=pf_by_site_size_df)
summary(test)
test <- lm(mean_pf_density_100m2~size_cm*region,data=pf_by_site_size_df)
summary(test)
test <- lm(mean_pf_density_100m2~size_cm:region,data=pf_by_site_size_df)
summary(test)
test <- lm(mean_pf_density_100m2~size_cm+region,data=pf_by_site_size_df)
summary(test)
test <- lm(mean_pf_density_100m2~size_cm*region,data=pf_by_site_size_df)
summary(test)
test <- lm(mean_pf_density_100m2~size_cm:region,data=pf_by_site_size_df)
summary(test)
test <- aov(mean_pf_density_100m2~size_cm:region,data=pf_by_site_size_df)
summary(test)
TukeyHSD(test)
residuals(test)
hist(residuals(test))
plot(residuals(test))
test <- aov(sqrt(mean_pf_density_100m2)~size_cm:region,data=pf_by_site_size_df)
summary(test)
TukeyHSD(test)
plot(residuals(test))
plot(residuals(test))
test <- aov((mean_pf_density_100m2)~size_cm:region,data=pf_by_site_size_df)
kruskal.test(mean_pf_density_100m2)~size_cm:region,data=pf_by_site_size_df)
kruskal.test(mean_pf_density_100m2~size_cm:region, data=pf_by_site_size_df)
install.packages(ordinal)
install.packages("ordinal")
library(ordinal) model
library(ordinal)
model = clm(size_cm ~ region, data = pf_by_site_size_df, threshold="symmetric")
pf_by_site_size_df
# site-level summary of fish density by size bin (does not include species)
pf_by_site_size_df <- pf_by_transect_size_species_df %>%
dplyr::mutate(pf_density_100m2 = n/survey_area_m2*100) %>% #summarizing density (n/100 m2)
group_by(region, site, size_cm) %>%
dplyr::reframe(mean_pf_density_100m2=mean(pf_density_100m2)) %>%
ungroup() %>%
mutate(size_cm= factor(size_cm, levels = c("15 to 20", "20 to 25", "25 to 30", "30 to 35", "35 to 40")))
pf_by_site_size_df
model = clm(size_cm ~ region, data = pf_by_site_size_df, threshold="symmetric")
model
summary(model)
res.fried <- pf_by_site_size_df %>% friedman_test(mean_pf_density_100m2 ~ size_cm |region)
res.fried <- pf_by_site_size_df %>% rstatix::friedman_test(mean_pf_density_100m2 ~ size_cm |region)
size_cm
pf_by_site_size_df
res.fried <- pf_by_site_size_df %>% rstatix::friedman_test(mean_pf_density_100m2 ~ size_cm|region)
res.fried <- pf_by_site_size_df %>% rstatix::friedman_test(mean_pf_density_100m2 ~ size_cm+region)
res.fried
res.fried <- pf_by_site_size_df %>% rstatix::friedman_test(mean_pf_density_100m2 ~ size_cm:region)
test <- aov((mean_pf_density_100m2)~size_cm:region,data=pf_by_site_size_df)
test <- aov((mean_pf_density_100m2)~size_cm:region,data=pf_by_site_size_df)
TukeyHSD(test)
pf_size_aov <- TukeyHSD(test)
summary(pf_size_aov)
pf_size_aov <- TukeyHSD(test) %>% broom::tidy()
pf_size_aov
pf_size_aov %>% filter(adj.p.value<0.05)
res.fried <- pf_by_site_size_df %>% rstatix::friedman_test(mean_pf_density_100m2 ~ region+size_cm:region)
test <- aov((mean_pf_density_100m2)~region+size_cm:region,data=pf_by_site_size_df)
pf_size_aov <- TukeyHSD(test) %>% broom::tidy()
pf_size_aov %>% filter(adj.p.value<0.05)
pf_by_site_size_df %>% rstatix::levene_test(mean_pf_density_100m2 ~ size_cm) #data violate homogeneity of variance assumption
2.796374e-05
pf_by_site_size_df %>% rstatix::levene_test(sqrt(mean_pf_density_100m2) ~ size_cm) #data violate homogeneity of variance assumption
pf_by_site_size_df %>% rstatix::levene_test(mean_pf_density_100m2 ~ species) #data violate homogeneity of variance assumption
plot(mean_pf_density_100m2~size_cm)
plot(pf_by_site_size_df$mean_pf_density_100m2~pf_by_site_size_df$size_cm)
pf_by_site_size_species_df %>% filter(size_cm!="35 to 40")
test <- pf_by_site_size_species_df %>% filter(size_cm!="35 to 40")
plot(test$mean_pf_density_100m2~test$size_cm)
test <- pf_by_site_size_species_df %>% filter(size_cm!="35 to 40")
plot(test$mean_pf_density_100m2~test$size_cm)
test
pf_by_site_size_df
plot(test$mean_pf_density_100m2~test$size_cm)
test <- pf_by_site_size_species_df %>% filter(size_cm!="35 to 40")
test
test_df <- pf_by_site_size_species_df %>% filter(size_cm!="35 to 40")
plot(test_df$mean_pf_density_100m2~test_df$size_cm)
range(test_df$mean_pf_density_100m2)
hist(test_df$mean_pf_density_100m2)
test <- aov((mean_pf_density_100m2)~region+size_cm:region,data=pf_by_site_size_df)
pf_size_aov <- TukeyHSD(test) %>% broom::tidy()
pf_size_aov %>% filter(adj.p.value<0.05)
install.packages("npmv")
library(npmv)
??npmv
nonpartest(mean_pf_density_100m2|size_cm~region,permreps=1000)
nonpartest(mean_pf_density_100m2|size_cm~region,data=pf_by_site_size_df, permreps=1000)
test <- aov((mean_pf_density_100m2)~size_cm,data=pf_by_site_size_df)
test %>% summary()
pf_size_aov <- TukeyHSD(test) %>% broom::tidy()
pf_size_aov %>% filter(adj.p.value<0.05)
test_df <- pf_by_site_size_species_df %>% filter(size_cm!="35 to 40")
test <- aov((mean_pf_density_100m2)~size_cm,data=test_df)
test %>% summary()
figsx_pf_size_dist
#corallivore density ~ region has a non-normal distribution of the residual
rstatix::shapiro_test(residuals(aov(mean_pf_density_100m2 ~ region+size_cm:region, data = test_df))) #data violate normality assumption
#corallivore density ~ region has a non-normal distribution of the residual
rstatix::shapiro_test(residuals(aov(mean_pf_density_100m2 ~ size_cm:region, data = pf_by_site_size_species_df))) #data violate normality assumption
selectivity_summary_stats_genus %>%
select(region, coral_genus, abundance_selectivity_sig, area_selectivity_sig)
