ggplot(aes(x=coral_diversity, y=n_colonies_grazed, color=region))+
geom_point(alpha=0.6)+
scale_y_continuous(breaks = c(0,2,4,6,8,10),
labels= c(0,2,4,6,8,10),
limits=c(0,10.2))+
theme_bw()+
scale_color_manual(values=region_palette)+
scale_fill_manual(values=region_palette)+
facet_wrap(~coral_species)+
labs(x = "Coral diversity (H')",
y = expression(paste("Colonies predated per 30 m" ^2)),
color="Region",
fill="Region")+
theme_bw()+
theme(legend.position = "top")
#reading in coral genus icons
branching_porties_image <- magick::image_read(path=here("figures_tables/reef_images", "Branching_porties.png"), density = NULL, depth = NULL, strip = TRUE)
orbicella_image <- magick::image_read(path=here("figures_tables/reef_images", "Orbicella_annularis.png"), density = NULL, depth = NULL, strip = TRUE)
porites_astreoides_image <- magick::image_read(path=here("figures_tables/reef_images", "Porites_astreoides.png"), density = NULL, depth = NULL, strip = TRUE)
siderastrea_image <- magick::image_read(path=here("figures_tables/reef_images", "Siderastrea_siderea.png"), density = NULL, depth = NULL, strip = TRUE)
#adding coral images to figure (image placement is off in R, but good in ggsave generated png)
corallivory_by_diversity_fig_final <- cowplot::ggdraw() +
draw_plot(corallivory_by_diversity_fig)+ #adds the plot (order matters to overlay the layers correctly)
draw_image(orbicella_image, x = -0.385, y = 0.29, scale=0.075)+
draw_image(branching_porties_image, x = 0.081, y = 0.29, scale=0.08)+
draw_image(porites_astreoides_image, x = -0.385, y = -0.113, scale=0.062)+
draw_image(siderastrea_image, x = 0.08, y = -0.11, scale=0.063)
#saving figure
ggsave(plot=corallivory_by_diversity_fig_final, filename=here("supplements/fig_s5_corallivory_by_coral_diversity.png"), width = 190, height = 140, dpi = 600, units = "mm")
corallivory_by_diversity_fig_final
set.seed(1945) #for reproducible results from random simulations of residuals
#scar abundance per colony with poisson
n_scars_col_level_poisson <- glmmTMB::glmmTMB(n_new_scars ~ col_area_cm2 + coral_species + region+
(1 | site/transect), #transects nested within sites within regions
family=poisson,
data = coral_scar_df)
n_scars_col_level_poisson %>% summary()
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_scars_col_level_nbinom <- glmmTMB::glmmTMB(n_new_scars ~ col_area_cm2 + coral_species + region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = coral_scar_df)
#likelihood ratio test of model using poisson versus negative binomial distribution
anova(n_scars_col_level_poisson, n_scars_col_level_nbinom)
#simulating residuals and testing
n_scars_col_level_residuals <- DHARMa::simulateResiduals(n_scars_col_level_nbinom, n = 10000, use.u = T)
#testing for zero-inflation in negative binomial model: zero-inflation not significant
n_scars_col_level_zero_inf_test<- DHARMa::testZeroInflation(n_scars_col_level_residuals)
n_scars_col_level_zero_inf_test
plot(n_scars_col_level_residuals) #NS overdispersion or outliers
#model output
n_scars_col_level_nbinom %>% summary()
#summary of mean number of new scars per colony by region
coral_scar_df %>%
group_by(region) %>%
dplyr::reframe(mean_n_new_scars=mean(n_new_scars)) %>%
mutate(mean_n_new_scars=round(mean_n_new_scars, 3))
coral_scar_df %>%
group_by(coral_species) %>%
reframe(mean_new_scars=mean(n_new_scars),
sem=sem(n_new_scars))
#tidying model output and calculating confidence intervals
n_scars_col_level_ci <- confint(n_scars_col_level_nbinom) %>%
as_tibble() %>%
select(-Estimate)
#tidying model output
n_scars_col_level_model_output <- n_scars_col_level_nbinom %>%
tidy() %>%
bind_cols(n_scars_col_level_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Scar abundance") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", ""))
#back transforming estimated effect sizes (see paper supplements for description)
n_scars_col_level_model_output %>%
#exponentiating all independent variables
mutate(estimate_backtransformed = exp(estimate)) %>%
mutate(across(where(is.double), ~round(.x, 3)))
n_scars_col_level_model_output
write_csv(n_scars_col_level_model_output, here("supplements/table_s6_colony_level_scar_abundance_results.csv"))
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=80), tidy=TRUE)
if (!require(mgcv)) install.packages("mgcv")
if (!require(itsadug)) install.packages("itsadug")
if (!require(cowplot)) install.packages("cowplot")
if (!require(magick)) install.packages("mgaick")
if (!require(DHARMa)) install.packages("DHARMa")
if (!require(glmmTMB)) install.packages("glmmTMB")
if (!require(here)) install.packages("here")
if (!require(here)) install.packages("broom")
if (!require(tidyverse)) install.packages("tidyverse")
packages <- c("mgcv", "itsadug", "magick", "broom", "cowplot", "DHARMa", "glmmTMB", "here", "tidyverse")
sapply(packages, require, character.only = T)
fish_df <- read_csv(here("data/regional_fish_data.csv")) %>%
mutate(region= factor(region, levels = c("Panamá", "Florida",  "St. Croix", "Bonaire")))
coral_scar_df <- read.csv(here("data/processed_coral_scar_data_colony_level.csv"),
fileEncoding = "UTF-8") %>% #UTF-8 is compatible with accents/tildes
mutate(region= factor(region, levels = c("Panamá", "Florida", "St. Croix", "Bonaire")))
site_coordinates <- read.csv(here("data/site_coordinates.csv"),
fileEncoding = "UTF-8") %>%
mutate(region= factor(region, levels = c("Panamá", "Florida", "St. Croix", "Bonaire")))
#depth of each fish survey transect
depth_fish_surveys <- fish_df  %>%
group_by(region, site, transect) %>%
distinct(depth_m)%>%
rename(fish_survey_depth_m=depth_m)
#summary of the number of transects and depth range by site
summarized_n_depth_fish_surveys<-depth_fish_surveys %>%
group_by(region, site) %>%
dplyr::reframe(n_fish_surveys=n(),
min_fish_survey_depth_m =min(fish_survey_depth_m),
med_fish_survey_depth_m =round(median(fish_survey_depth_m), 1),
max_fish_survey_depth_m =max(fish_survey_depth_m))
#depth of each coral and scar survey
depth_coral_surveys <- coral_scar_df %>%
group_by(region, site, transect) %>%
distinct(depth_m) %>%
rename(coral_survey_depth_m=depth_m)
#summary of the number of surveys and depth range by site
summarized_n_depth_coral_surveys<-depth_coral_surveys %>%
group_by(region, site) %>%
dplyr::reframe(n_coral_surveys=n(),
min_coral_survey_depth_m =min(coral_survey_depth_m),
med_coral_survey_depth_m =round(median(coral_survey_depth_m), 1),
max_coral_survey_depth_m =max(coral_survey_depth_m))
#joining site-level sampling effort summary with site coordinates
table_s1 <- site_coordinates %>%
left_join(summarized_n_depth_fish_surveys) %>%
left_join(summarized_n_depth_coral_surveys)
# write.csv(table_s1,
#           here("supplements/table_s1_site_coordinates_sample_size.csv"),
#           fileEncoding = "UTF-8",
#           row.names=FALSE)
fish_ab_vals <- read_csv(here("data/fish_ab_values.csv"))
filtered_fish_ab_vals <- fish_ab_vals %>%
filter(species %in% c("Scarus taeniopterus", "Scarus vetula", "Sparisoma viride")) %>%
group_by(species) %>%
filter(rsquared>0.85 | is.na(rsquared)) %>% #filtering out values with low R2
slice_max(n_obs, n=1) %>% #from values with R2>0.85, selecting those with the max species observed
select(species, n_obs, measurement_type, a, b, ref_short)
ab_val_noVR <- filtered_fish_ab_vals %>%
fish_weight_noVR <- fish_df %>%
filter(species %in% c("Scarus taeniopterus", "Scarus vetula", "Sparisoma viride")) %>%
mutate(size_cm_est=case_when(
size_cm=="15 to 20"~17.5,
size_cm=="20 to 25"~22.5,
size_cm=="25 to 30"~27.5,
TRUE~as.numeric(size_cm))
) %>%
left_join(ab_val_noVR) %>% #CHANGED
mutate(weight_g=a*size_cm_est^b)
filtered_fish_ab_vals
filtered_fish_ab_vals
fish_weight_est <- fish_df %>%
filter(species %in% c("Scarus taeniopterus", "Scarus vetula", "Sparisoma viride")) %>%
mutate(size_cm_est=case_when(
size_cm=="15 to 20"~17.5,
size_cm=="20 to 25"~22.5,
size_cm=="25 to 30"~27.5,
TRUE~as.numeric(size_cm))
) %>%
left_join(filtered_fish_ab_vals) %>% #CHANGED
mutate(weight_g=a*size_cm_est^b)
pf_biomass_transect <- fish_weight_est %>%
mutate(survey_area_m2=survey_l_m*survey_w_m) %>% #summarizing transect metadata
group_by(region, site, transect, survey_area_m2, depth_m) %>%
dplyr::reframe(biomass_g_m2=sum(weight_g)/survey_area_m2)
fish_df %>%
distinct(species)
# Transect-level summary of fish density
major_corallivores_df <- fish_df %>%
filter(species %in% c("Scarus taeniopterus", "Scarus vetula", "Sparisoma viride")) %>%
group_by(region, site, date, transect, depth_m, survey_l_m, survey_w_m) %>%
dplyr::reframe(n_major_corallivores=n())
#merging data in transect-level summary of parrotfish denisty
pf_density_transect <- fish_df %>%
select(region, site, date, transect, depth_m, survey_l_m, survey_w_m) %>%
mutate(survey_area_m2=survey_l_m*survey_w_m) %>% #summarizing transect metadata
distinct() %>%
left_join(major_corallivores_df) %>% #adding in fish data
left_join(pf_biomass_transect) %>%
mutate(n_major_corallivores = replace_na(n_major_corallivores, 0), #replacing NA with 0 for surveys with no parrotfishes
density_major_corallivores = n_major_corallivores/survey_area_m2*100,
biomass_g_m2=replace_na(biomass_g_m2, 0)) %>% # calculating density (fish/100 m2)
ungroup()
# Site-level summary of fish density
pf_density_site <- pf_density_transect %>%
group_by(region, site) %>%
dplyr::reframe(mean_density_major_corallivores=mean(density_major_corallivores),
mean_biomass_major_corallivores=mean(biomass_g_m2)) %>%
ungroup()
#function to calculate the standard error of the mean
sem <- function(x) {
sd(x, na.rm=TRUE)/sqrt(sum(!is.na(x)))
}
# Region-level summary of fish density
regional_parrotfish_density <- pf_density_site %>%
group_by(region) %>%
dplyr::reframe(mean_density_major=mean(mean_density_major_corallivores),
sem_major=sem(mean_density_major_corallivores),
mean_biomass_major=mean(mean_biomass_major_corallivores),
sem_biomass=sem(mean_biomass_major_corallivores))
# Transect and genus-level summary of coral data
coral_transect_and_genus <- coral_scar_df %>%
mutate(coral_genus=gsub("\\s.*", "", coral_species),
coral_genus=case_when(coral_genus=="Branching"~"Porites",
TRUE~as.character(coral_genus))) %>%
mutate(proportion_grazed=total_grazed_cm2/col_area_cm2) %>%
group_by(region, site, transect, depth_m, coral_genus) %>%
dplyr::reframe(genus_total_col_area_cm2=sum(col_area_cm2),
genus_total_scar_area_cm2=sum(total_grazed_cm2),
genus_total_n_scars=sum(n_new_scars),
mean_proportion_grazed=mean(proportion_grazed)) %>%
mutate(pct_coral_cover_by_genera=(genus_total_col_area_cm2/300000)*100,
scars_m2_coral_by_genera=genus_total_n_scars/(genus_total_col_area_cm2/10000),
pct_coral_grazed_by_genera=(genus_total_scar_area_cm2/genus_total_col_area_cm2)*100) %>%
ungroup()
# Transect-level summary of coral data
coral_transect <- coral_scar_df %>%
mutate(proportion_grazed=total_grazed_cm2/col_area_cm2) %>%
group_by(region, site, transect, depth_m) %>%
dplyr::reframe(total_col_area_cm2=sum(col_area_cm2),
total_scar_area_cm2=sum(total_grazed_cm2),
total_n_scars=sum(n_new_scars),
mean_proportion_grazed=mean(proportion_grazed),
n_colonies=n()) %>%
mutate(pct_coral_cover=(total_col_area_cm2/300000)*100,
scars_m2_coral=total_n_scars/(total_col_area_cm2/10000),
pct_coral_grazed=(total_scar_area_cm2/total_col_area_cm2)*100) %>%
ungroup()
# Site-level summary of coral data
coral_site <- coral_transect %>%
group_by(region, site) %>%
dplyr::reframe(mean_pct_coral_cover=mean(pct_coral_cover),
sem_coral_cover=sem(pct_coral_cover),
mean_pct_coral_grazed=mean(pct_coral_grazed),
sem_pct_grazed=sem(pct_coral_grazed),
mean_scars_m2_coral= mean(scars_m2_coral),
sem_scar_density=sem(scars_m2_coral),
mean_total_n_scars=round(mean(total_n_scars), 0),
sem_total_n_scars=sem(total_n_scars)) %>%
ungroup()
# Regional summary of coral data
regional_coral_scar_patterns <- coral_site %>%
group_by(region) %>%
dplyr::reframe(mean_coral_cover=mean(mean_pct_coral_cover),
sem_cover=sem(mean_pct_coral_cover),
mean_scar_density=mean(mean_scars_m2_coral),
sem_density=sem(mean_scars_m2_coral),
mean_coral_area_grazed=mean(mean_pct_coral_grazed),
sem_area_grazed=sem(mean_pct_coral_grazed),
mean_scar_abundance_per_30m2=mean(mean_total_n_scars),
sem_scar_abundance=sem(mean_total_n_scars))
# Regional summary mean scar size for grazed colonies
mean_scar_size_by_region <- coral_scar_df %>%
filter(mean_scar_area_cm2>0) %>%
group_by(region) %>%
dplyr::reframe(mean_scar_size_cm2=mean(mean_scar_area_cm2), #regional mean calculated from mean scar size per colony with grazing scars
sem_scar_size=sem(mean_scar_area_cm2))
fish_corals_site_level <- coral_site %>%
left_join(pf_density_site) %>%
mutate(region= factor(region, levels = c("Panamá", "Florida",  "St. Croix", "Bonaire")))
set.seed(1945) #for reproducible results from random simulations of residuals
#PARROTFISH DENSITY MODELS
pfdensity1 <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~sqrt(mean_density_major_corallivores)*mean_pct_coral_cover+
#asin(sqrt(mean_pct_coral_cover/100)) +
(1 | region), #transects nested within sites within regions
data = fish_corals_site_level,
family=gaussian)
pfdensity1_residuals <- DHARMa::simulateResiduals(pfdensity1, n = 10000, use.u = T)
DHARMa::testDispersion(pfdensity1_residuals, plot=F) #no significant overdispersion
plot(pfdensity1_residuals) #KS test significant
pfdensity1 %>% summary()
pfdensity2 <- glmmTMB::glmmTMB(log(mean_pct_coral_grazed) ~sqrt(mean_density_major_corallivores)*mean_pct_coral_cover+
#asin(sqrt(mean_pct_coral_cover/100)) +
(1 | region), #transects nested within sites within regions
data = fish_corals_site_level,
family=gaussian)
pfdensity2_residuals <- DHARMa::simulateResiduals(pfdensity2, n = 10000, use.u = T)
DHARMa::testDispersion(pfdensity2_residuals, plot=F) #no significant overdispersion
plot(pfdensity2_residuals) #KS test significant
pfdensity2 %>% summary()
if (!require(broom)) install.packages("broom")
if (!require(broom.mixed)) install.packages("broom.mixed")
if (!require(cowplot)) install.packages("cowplot")
if (!require(DHARMa)) install.packages("DHARMa")
if (!require(electivity)) install.packages("electivity")
if (!require(ggpp)) install.packages("ggpp")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(ggridges)) install.packages("ggridges")
if (!require(glmmTMB)) install.packages("glmmTMB")
if (!require(here)) install.packages("here")
if (!require(janitor)) install.packages("janitor")
if (!require(magick)) install.packages("magick")
if (!require(moderndive)) install.packages("moderndive")
if (!require(tidyverse)) install.packages("tidyverse")
packages <- c("broom", "broom.mixed", "cowplot", "DHARMa", "electivity", "ggpp", "ggpubr", "ggridges", "glmmTMB", "here", "janitor", "magick", "moderndive", "tidyverse")
sapply(packages, require, character.only = T)
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=80), tidy=TRUE)
if (!require(broom)) install.packages("broom")
if (!require(broom.mixed)) install.packages("broom.mixed")
if (!require(cowplot)) install.packages("cowplot")
if (!require(DHARMa)) install.packages("DHARMa")
if (!require(electivity)) install.packages("electivity")
if (!require(ggpp)) install.packages("ggpp")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(ggridges)) install.packages("ggridges")
if (!require(glmmTMB)) install.packages("glmmTMB")
if (!require(here)) install.packages("here")
if (!require(janitor)) install.packages("janitor")
if (!require(magick)) install.packages("magick")
if (!require(moderndive)) install.packages("moderndive")
if (!require(tidyverse)) install.packages("tidyverse")
packages <- c("broom", "broom.mixed", "cowplot", "DHARMa", "electivity", "ggpp", "ggpubr", "ggridges", "glmmTMB", "here", "janitor", "magick", "moderndive", "tidyverse")
sapply(packages, require, character.only = T)
fish_df <- read_csv(here("data/regional_fish_data.csv")) %>%
mutate(region= factor(region, levels = c("Panamá", "Florida",  "St. Croix", "Bonaire")))
coral_scar_df <- read.csv(here("data/processed_coral_scar_data_colony_level.csv"),
fileEncoding = "UTF-8") %>% #UTF-8 is compatible with accents/tildes
mutate(region= factor(region, levels = c("Panamá", "Florida", "St. Croix", "Bonaire")))
site_coordinates <- read.csv(here("data/site_coordinates.csv"),
fileEncoding = "UTF-8") %>%
mutate(region= factor(region, levels = c("Panamá", "Florida", "St. Croix", "Bonaire")))
#depth of each fish survey transect
depth_fish_surveys <- fish_df  %>%
group_by(region, site, transect) %>%
distinct(depth_m) %>%
rename(fish_survey_depth_m = depth_m)
#summary of the number of transects and depth range by site
summarized_n_depth_fish_surveys<-depth_fish_surveys %>%
group_by(region, site) %>%
dplyr::reframe(n_fish_surveys=n(),
min_fish_survey_depth_m = min(fish_survey_depth_m),
med_fish_survey_depth_m = round(median(fish_survey_depth_m), 1),
max_fish_survey_depth_m = max(fish_survey_depth_m))
#depth of each coral and scar survey
depth_coral_surveys <- coral_scar_df %>%
group_by(region, site, transect) %>%
distinct(depth_m) %>%
rename(coral_survey_depth_m=depth_m)
#summary of the number of surveys and depth range by site
summarized_n_depth_coral_surveys<-depth_coral_surveys %>%
group_by(region, site) %>%
dplyr::reframe(n_coral_surveys=n(),
min_coral_survey_depth_m = min(coral_survey_depth_m),
med_coral_survey_depth_m = round(median(coral_survey_depth_m), 1),
max_coral_survey_depth_m = max(coral_survey_depth_m))
#joining site-level sampling effort summary with site coordinates
table_s1 <- site_coordinates %>%
left_join(summarized_n_depth_fish_surveys) %>%
left_join(summarized_n_depth_coral_surveys)
write.csv(table_s1,
here("supplements/table_s1_site_coordinates_sample_size.csv"),
fileEncoding = "UTF-8",
row.names=FALSE)
#transect-level summary of fish density
major_corallivores_df <- fish_df %>%
mutate(survey_area_m2 = survey_l_m*survey_w_m) %>% #summarizing transect metadata
group_by(region, site, date, transect, depth_m, survey_l_m, survey_w_m) %>%
dplyr::reframe(n_major_corallivores = sum(count), sum_corallivore_weight_g = sum(weight_g)) %>%
ungroup()
#transect-level summary of fish density and biomass
major_corallivores_df <- fish_df %>%
mutate(survey_area_m2 = survey_l_m*survey_w_m) %>% #summarizing transect metadata
group_by(region, site, date, transect, depth_m, survey_l_m, survey_w_m) %>%
dplyr::reframe(n_major_corallivores = sum(count),
sum_corallivore_weight_g = sum(weight_g)) %>%
ungroup()
#double checking that the fish abundance and total weight per transect summary has one row per transect
sum(table_s1$n_fish_surveys) == nrow(major_corallivores_df)
#summarizing metadata of for each fish survey transect
fish_survey_transect_metadata <- fish_df %>%
mutate(survey_area_m2=survey_l_m*survey_w_m) %>% #calculating the area surveyed per transect
select(region, site, date, transect, depth_m, survey_area_m2) %>%
distinct() %>% #to only have one row per transect
ungroup()
#summarizing metadata of for each fish survey transect
fish_survey_transect_metadata <- fish_df %>%
mutate(survey_area_m2 = survey_l_m*survey_w_m) %>% #calculating the area surveyed per transect
select(region, site, date, transect, depth_m, survey_area_m2) %>%
distinct() %>% #to only have one row per transect
ungroup()
#double checking that the metadata only includes one row per transect
sum(table_s1$n_fish_surveys) == nrow(fish_survey_transect_metadata)
#double checking that the fish abundance and total weight per transect summary has one row per transect
sum(table_s1$n_fish_surveys) == nrow(major_corallivores_df)
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=80), tidy=TRUE)
if (!require(broom)) install.packages("broom")
if (!require(broom.mixed)) install.packages("broom.mixed")
if (!require(cowplot)) install.packages("cowplot")
if (!require(DHARMa)) install.packages("DHARMa")
if (!require(electivity)) install.packages("electivity")
if (!require(ggpp)) install.packages("ggpp")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(ggridges)) install.packages("ggridges")
if (!require(glmmTMB)) install.packages("glmmTMB")
if (!require(here)) install.packages("here")
if (!require(janitor)) install.packages("janitor")
if (!require(magick)) install.packages("magick")
if (!require(moderndive)) install.packages("moderndive")
if (!require(tidyverse)) install.packages("tidyverse")
packages <- c("broom", "broom.mixed", "cowplot", "DHARMa", "electivity", "ggpp", "ggpubr", "ggridges", "glmmTMB", "here", "janitor", "magick", "moderndive", "tidyverse")
sapply(packages, require, character.only = T)
fish_df <- read_csv(here("data/regional_fish_data.csv")) %>%
mutate(region= factor(region, levels = c("Panamá", "Florida",  "St. Croix", "Bonaire")))
coral_scar_df <- read.csv(here("data/processed_coral_scar_data_colony_level.csv"),
fileEncoding = "UTF-8") %>% #UTF-8 is compatible with accents/tildes
mutate(region= factor(region, levels = c("Panamá", "Florida", "St. Croix", "Bonaire")))
site_coordinates <- read.csv(here("data/site_coordinates.csv"),
fileEncoding = "UTF-8") %>%
mutate(region= factor(region, levels = c("Panamá", "Florida", "St. Croix", "Bonaire")))
#depth of each fish survey transect
depth_fish_surveys <- fish_df  %>%
group_by(region, site, transect) %>%
distinct(depth_m) %>%
rename(fish_survey_depth_m = depth_m)
#summary of the number of transects and depth range by site
summarized_n_depth_fish_surveys<-depth_fish_surveys %>%
group_by(region, site) %>%
dplyr::reframe(n_fish_surveys=n(),
min_fish_survey_depth_m = min(fish_survey_depth_m),
med_fish_survey_depth_m = round(median(fish_survey_depth_m), 1),
max_fish_survey_depth_m = max(fish_survey_depth_m))
#depth of each coral and scar survey
depth_coral_surveys <- coral_scar_df %>%
group_by(region, site, transect) %>%
distinct(depth_m) %>%
rename(coral_survey_depth_m = depth_m)
#summary of the number of surveys and depth range by site
summarized_n_depth_coral_surveys<-depth_coral_surveys %>%
group_by(region, site) %>%
dplyr::reframe(n_coral_surveys=n(),
min_coral_survey_depth_m = min(coral_survey_depth_m),
med_coral_survey_depth_m = round(median(coral_survey_depth_m), 1),
max_coral_survey_depth_m = max(coral_survey_depth_m))
#joining site-level sampling effort summary with site coordinates
table_s1 <- site_coordinates %>%
left_join(summarized_n_depth_fish_surveys) %>%
left_join(summarized_n_depth_coral_surveys)
write.csv(table_s1,
here("supplements/table_s1_site_coordinates_sample_size.csv"),
fileEncoding = "UTF-8",
row.names=FALSE)
#transect-level summary of fish density and biomass
major_corallivores_df <- fish_df %>%
mutate(survey_area_m2 = survey_l_m*survey_w_m) %>% #summarizing transect metadata
group_by(region, site, date, transect, depth_m, survey_l_m, survey_w_m) %>%
dplyr::reframe(n_major_corallivores = sum(count),
sum_corallivore_weight_g = sum(weight_g)) %>%
ungroup()
#double checking that the fish abundance and total weight per transect summary has one row per transect
sum(table_s1$n_fish_surveys) == nrow(major_corallivores_df)
sum(table_s1$n_fish_surveys)
table_s1$n_fish_surveys
table_s1
View(fish_df)
depth_fish_surveys
#summary of the number of transects and depth range by site
summarized_n_depth_fish_surveys <- depth_fish_surveys %>%
group_by(region, site) %>%
dplyr::reframe(n_fish_surveys=n(),
min_fish_survey_depth_m = min(fish_survey_depth_m),
med_fish_survey_depth_m = round(median(fish_survey_depth_m), 1),
max_fish_survey_depth_m = max(fish_survey_depth_m))
summarized_n_depth_fish_surveys
#summary of the number of transects and depth range by site
summarized_n_depth_fish_surveys <- depth_fish_surveys %>%
group_by(region, site) %>%
dplyr::reframe(n_fish_surveys=n(),
min_fish_survey_depth_m = min(fish_survey_depth_m),
med_fish_survey_depth_m = round(median(fish_survey_depth_m), 1),
max_fish_survey_depth_m = max(fish_survey_depth_m))
summarized_n_depth_fish_surveys
#depth of each coral and scar survey
depth_coral_surveys <- coral_scar_df %>%
group_by(region, site, transect) %>%
distinct(depth_m) %>%
rename(coral_survey_depth_m = depth_m)
depth_coral_surveys
#summary of the number of surveys and depth range by site
summarized_n_depth_coral_surveys <- depth_coral_surveys %>%
group_by(region, site) %>%
dplyr::reframe(n_coral_surveys = n(),
min_coral_survey_depth_m = min(coral_survey_depth_m),
med_coral_survey_depth_m = round(median(coral_survey_depth_m), 1),
max_coral_survey_depth_m = max(coral_survey_depth_m))
summarized_n_depth_coral_surveys
#joining site-level sampling effort summary with site coordinates
table_s1 <- site_coordinates %>%
left_join(summarized_n_depth_fish_surveys) %>%
left_join(summarized_n_depth_coral_surveys)
table_s1
summarized_n_depth_fish_surveys
summarized_n_depth_coral_surveys
summarized_n_depth_fish_surveys
#joining site-level sampling effort summary with site coordinates
table_s1 <- site_coordinates %>%
left_join(summarized_n_depth_fish_surveys) %>%
left_join(summarized_n_depth_coral_surveys)
table_s1
summarized_n_depth_coral_surveys
summarized_n_depth_fish_surveys
table_s1
