branching_porties_image <- magick::image_read(path=here("figures_tables/reef_images", "Branching_porties.png"), density = NULL, depth = NULL, strip = TRUE)
orbicella_image <- magick::image_read(path=here("figures_tables/reef_images", "Orbicella_annularis.png"), density = NULL, depth = NULL, strip = TRUE)
porites_astreoides_image <- magick::image_read(path=here("figures_tables/reef_images", "Porites_astreoides.png"), density = NULL, depth = NULL, strip = TRUE)
siderastrea_image <- magick::image_read(path=here("figures_tables/reef_images", "Siderastrea_siderea.png"), density = NULL, depth = NULL, strip = TRUE)
#adding coral images to figure (image placement is off in R, but good in ggsave generated png)
corallivory_by_diversity_fig_final <- cowplot::ggdraw() +
draw_plot(corallivory_by_diversity_fig)+ #adds the plot (order matters to overlay the layers correctly)
draw_image(orbicella_image, x = -0.385, y = 0.29, scale=0.075)+
draw_image(branching_porties_image, x = 0.081, y = 0.29, scale=0.08)+
draw_image(porites_astreoides_image, x = -0.385, y = -0.113, scale=0.062)+
draw_image(siderastrea_image, x = 0.08, y = -0.11, scale=0.063)
#saving figure
ggsave(plot=corallivory_by_diversity_fig_final, filename=here("figures_tables/supplements_figs/fig_s5_corallivory_by_coral_diversity.png"), width = 190, height = 140, dpi = 600, units = "mm")
if (!require(here)) install.packages("here")
if (!require(purrr)) install.packages("purrr")
if (!require(tidyverse)) install.packages("tidyverse")
packages <- c("here", "purrr", "tidyverse")
sapply(packages, require, character.only = T)
stx18_bon19 <- read_csv(here("data/stx18_bon19_fish_data.csv")) %>%
mutate(date=as.Date(date, "%m/%d/%y"))
fla13_pan13 <- read.csv(here("data/fla13_pan13_fish_data.csv"), fileEncoding = "UTF-8") %>% #so accents are read in correctly
mutate(date=as.Date(date))
fish_ab_vals <- read_csv(here("data/fish_ab_values.csv"))
checking_average_segment_length <- stx18_bon19 %>%
mutate(dist_m_rnd =round(dist_m, 0)) %>%
select(site, transect, min, dist_m_rnd) %>%
distinct() %>%
filter(dist_m_rnd >=15 & dist_m_rnd <=25)
hist(checking_average_segment_length$dist_m_rnd)
#subsetting data to only include surveys between 16 to 20m
fish_df_16_to_20 <- stx18_bon19 %>%
filter(dist_m >=16 & dist_m <=20) %>%
mutate(dist_m =round(dist_m, 0)) %>%
select(region, date, site, transect, species, stage, fl_cm, n_pf, dist_m, min, depth_m)
segment_filter_df <- fish_df_16_to_20 %>%
select(region, date, site, transect, min) %>%
distinct() %>%
mutate(segment_id=cumsum(distinct_segment= min != lag(min) + 1 | is.na(min != lag(min) + 1))) %>%
group_split(segment_id) %>%
map(~.x %>% mutate(row_num=row_number(), row_to_keep=row_num %%2==1)) %>%
bind_rows() %>%
select(-segment_id, -row_num)
fish_df_filtered <- fish_df_16_to_20 %>%
dplyr::left_join(segment_filter_df) %>%
filter(row_to_keep==TRUE)
fish_replicate_check <- fish_df_filtered %>%
select(region, date, site, transect, min, dist_m) %>%
distinct() %>%
group_by(region, site) %>%
dplyr::reframe(n=n())
stx_bon19_transect_temp <- fish_df_filtered %>%
select(region, site, date, transect_old=transect, min, dist_m, depth_m) %>%
distinct() %>%
group_by(region, site) %>%
mutate(transect=1:n())
stx_bon19_metadata <- stx_bon19_transect_temp %>%
mutate(survey_w_m=5) %>%
select(region, site, date, transect, depth_m, survey_l_m= dist_m, survey_w_m) %>%
mutate(depth_m=round(depth_m, 1)) %>%
distinct()
stx18_bon19_clean <- fish_df_filtered %>%
rename(transect_old=transect, number=n_pf, phase=stage, size_cm=fl_cm) %>%
dplyr::left_join(stx_bon19_transect_temp, by = c("region", "date", "site", "min", "transect_old", "depth_m")) %>%
select(region, site, date, transect, depth_m, species,phase, size_cm, number) %>%
mutate(depth_m=round(depth_m, 1),
size_cm=as.character(size_cm))
fish_survey_metadata <- fla13_pan13 %>%
mutate(survey_l_m=25, survey_w_m=4) %>%
select(region, site, date, transect, depth_m, survey_l_m, survey_w_m) %>%
distinct() %>%
bind_rows(stx_bon19_metadata)
merged_fish_surveys <- fla13_pan13 %>%
filter(number>0) %>% #filtering to only include observations with fish
uncount(number) %>%
bind_rows(stx18_bon19_clean) %>%
select(-number)%>%
mutate(count=1)
merged_fish_surveys
major_corallivores_df <-  merged_fish_surveys %>%
filter(species %in% c("Scarus taeniopterus", "Scarus vetula", "Sparisoma viride")) #filtering to only include predominant corallivore species
major_corallivore_counts_df <- fish_survey_metadata %>%
dplyr::left_join(major_corallivores_df) %>%
mutate(species=replace_na(species, "No major corallivores"), #accounting for transects with no observed major corallivores
count=replace_na(count, 0))
filtered_fish_ab_vals <- fish_ab_vals %>%
filter(species %in% c("Scarus taeniopterus", "Scarus vetula", "Sparisoma viride")) %>% #selecting species of interest
group_by(species) %>%
filter(rsquared>0.85 | is.na(rsquared)) %>% #filtering out values with low R2
slice_max(n_obs, n=1) %>% #from values with R2>0.85, selecting those with the max species observed
select(species, a, b)
filtered_fish_ab_vals
major_corallivore_counts_df
major_corallivore_counts_df %>% filter(region=="Panamá")
major_corallivore_counts_df %>% filter(region=="Panamá") %>% distinct(size_cm)
major_corallivore_counts_df %>% filter(region=="Panamá" & size_cm=="30 to 35")
write_csv(transect_level_model_output, here("figures_tables/supplements_tables/table_s5_transect_level_grazed_coral_abundance_results.csv"))
write_csv(pct_grazed_col_level_model_output, here("figures_tables/supplements_tables/table_s8_colony_level_percent_coral_grazed_results.csv"))
pct_grazed_col_level_ci <- confint(pct_grazed_t) %>%
as_tibble() %>%
select(-Estimate)
pct_grazed_col_level_model_output <- pct_grazed_t %>%
broom.mixed::tidy() %>%
filter(term != "sd__Observation") %>%
bind_cols(pct_grazed_col_level_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Colony-level percent coral grazed") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", ""))
#back transforming estimated effect sizes (see paper supplements for description)
pct_grazed_col_level_model_output %>%
#exponentiating all independent variables except coral area, which was log transformed
mutate(estimate_backtransformed = case_when(term!="log(col_area_cm2)"~exp(estimate),
TRUE~as.double(estimate))) %>%
mutate(across(where(is.double), ~round(.x, 3)))
write_csv(pct_grazed_col_level_model_output, here("figures_tables/supplements_tables/table_s8_colony_level_percent_coral_grazed_results.csv"))
set.seed(1945) #for reproducible results from random simulations of residuals
pct_grazed_gaussian <- glmmTMB::glmmTMB(log(pct_grazed) ~ log(col_area_cm2) + coral_species+ depth_m + region+
(1 | site/transect), #transects nested within sites within regions
family=gaussian,
data = predated_colonies_subset)
pct_grazed_t <- glmmTMB::glmmTMB(log(pct_grazed) ~ log(col_area_cm2) + coral_species + depth_m + region+
(1 | site/transect), #transects nested within sites within regions
family=t_family,
data = predated_colonies_subset)
#checking model residuals
pct_grazed_residuals <- DHARMa::simulateResiduals(pct_grazed, n = 1000, use.u = T)
plot(pct_grazed_residuals) #dispersion and KS good, sig outliers
# likelihood ratio test of model using t-distribution versus Gaussian distribution: no sig diff
anova(pct_grazed_t, pct_grazed_gaussian)
# simulating residuals and visualizing model fit: visuals confirm t-distribution
pct_grazed_gaussian_residuals <- DHARMa::simulateResiduals(pct_grazed_gaussian, n = 1000, use.u = T)
mean_scar_size_t_residuals <- DHARMa::simulateResiduals(pct_grazed_t, n = 1000, use.u = T)
#diagnostic plots confirm t-distribution is a better fit
plot(mean_scar_size_gaussian_residuals)
plot(mean_scar_size_t_residuals)
#model results
pct_grazed_t %>% summary()
pct_grazed_col_level_ci <- confint(pct_grazed_t) %>%
as_tibble() %>%
select(-Estimate)
pct_grazed_col_level_model_output <- pct_grazed_t %>%
broom.mixed::tidy() %>%
filter(term != "sd__Observation") %>%
bind_cols(pct_grazed_col_level_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Colony-level percent coral grazed") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", ""))
#back transforming estimated effect sizes (see paper supplements for description)
pct_grazed_col_level_model_output %>%
#exponentiating all independent variables except coral area, which was log transformed
mutate(estimate_backtransformed = case_when(term!="log(col_area_cm2)"~exp(estimate),
TRUE~as.double(estimate))) %>%
mutate(across(where(is.double), ~round(.x, 3)))
write_csv(pct_grazed_col_level_model_output, here("figures_tables/supplements_tables/table_s8_colony_level_percent_coral_grazed_results.csv"))
n_grazed_diversity_nbinom_ci <- confint(n_grazed_diversity_nbinom) %>%
as_tibble() %>%
select(-Estimate)
#tidying model output
transect_level_model_output <- n_grazed_diversity_nbinom %>%
broom.mixed::tidy() %>%
bind_cols(n_grazed_diversity_nbinom_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Colonies grazed") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", "")) %>%
mutate(term=str_replace(term, "region", ""))
#back transforming estimated effect sizes (see paper supplements for description)
transect_level_model_output %>%
#exponentiating all independent variables except proportional cover, which was log transformed
mutate(estimate_backtransformed = case_when(!term %in% c("Branching Porites spp.:log(proportional_cover)", "Orbicella annularis:log(proportional_cover)", "Porites astreoides:log(proportional_cover)", "Siderastrea siderea:log(proportional_cover)") ~exp(estimate),
TRUE~as.double(estimate))) %>%
mutate(across(where(is.double), ~round(.x, 3)))
write_csv(transect_level_model_output, here("figures_tables/supplements_tables/table_s5_transect_level_grazed_coral_abundance_results.csv"))
pct_grazed_col_level_ci <- confint(pct_grazed_t) %>%
as_tibble() %>%
select(-Estimate)
pct_grazed_col_level_model_output <- pct_grazed_t %>%
broom.mixed::tidy() %>%
filter(term != "sd__Observation") %>%
bind_cols(pct_grazed_col_level_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Colony-level percent coral grazed") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", ""))
#back transforming estimated effect sizes (see paper supplements for description)
pct_grazed_col_level_model_output %>%
#exponentiating all independent variables except coral area, which was log transformed
mutate(estimate_backtransformed = case_when(term!="log(col_area_cm2)"~exp(estimate),
TRUE~as.double(estimate))) %>%
mutate(across(where(is.double), ~round(.x, 3)))
write_csv(pct_grazed_col_level_model_output, here("figures_tables/supplements_tables/table_s8_colony_level_percent_coral_grazed_results.csv"))
#model results
pct_grazed_t %>% summary()
1.630e-09
#checking model results
mean_scar_size_t %>% summary()
# model output
n_scars_col_level_nbinom2 %>% summary()
## random-slope and intercept model with interaction: warnings - model is not identifiable/won't converge
m1_scar_pf_density_gauss <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~ mean_pf_n_100m2*mean_pct_coral_cover + (mean_pf_n_100m2 + mean_pct_coral_cover | region), data = fish_corals_site_level, family=gaussian)
m1_scar_pf_density <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~ mean_pf_n_100m2*mean_pct_coral_cover + (mean_pf_n_100m2 + mean_pct_coral_cover | region), data = fish_corals_site_level, family=t_family)
# random-intercept model model with interaction (no explanatory variable transformation)
m2_scar_pf_density_gauss <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~ mean_pf_n_100m2*mean_pct_coral_cover + (1 | region), data = fish_corals_site_level, family=gaussian)
# random-intercept model model with interaction (no explanatory variable transformation)
m2_scar_pf_density_gauss <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~ mean_pf_n_100m2*mean_pct_coral_cover + (1 | region), data = fish_corals_site_level, family=gaussian)
m2_scar_pf_density <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~ mean_pf_n_100m2*mean_pct_coral_cover + (1 | region), data = fish_corals_site_level, family=t_family)
m2_scar_pf_density_residuals_gauss <- DHARMa::simulateResiduals(m2_scar_pf_density_gauss, n = 1000, use.u = T) #evaluating model fit
plot(m2_scar_pf_density_residuals_gauss) #odd residual versus predicted pattern, trying transformation
m2_scar_pf_density <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~ mean_pf_n_100m2*mean_pct_coral_cover + (1 | region), data = fish_corals_site_level, family=t_family)
m2_scar_pf_density_residuals <- DHARMa::simulateResiduals(m2_scar_pf_density, n = 1000, use.u = T) #evaluating model fit
plot(m2_scar_pf_density_residuals) #odd residual versus predicted pattern, trying transformation
# random-intercept model model with interaction
m3_scar_pf_density <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~ sqrt(mean_pf_n_100m2)*mean_pct_coral_cover + (1 | region), data = fish_corals_site_level, family=t_family)
m3_scar_pf_density_residuals <- DHARMa::simulateResiduals(m3_scar_pf_density, n = 1000, use.u = T) #evaluating model fit
plot(m3_scar_pf_density_residuals) #looks better
#random-slope and intercept model with interaction: warnings - model is not identifiable/won't converge
m1_scar_density_biomass_gauss <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~ mean_pf_g_100m2*mean_pct_coral_cover + (mean_pf_n_100m2 + mean_pct_coral_cover | region), data = fish_corals_site_level, family=gaussian)
m1_scar_density_biomass <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~ mean_pf_g_100m2*mean_pct_coral_cover + (mean_pf_n_100m2 + mean_pct_coral_cover | region), data = fish_corals_site_level, family=t_family)
#random-intercept model
# Gaussian model
m2_scar_density_biomass_gauss <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~ mean_pf_g_100m2*mean_pct_coral_cover + (1 | region), data = fish_corals_site_level, family=t_family)
scar_density_biomass_m2_residuals_gauss <- DHARMa::simulateResiduals(m2_scar_density_biomass_gauss, n = 1000, use.u = T)
plot(scar_density_biomass_m2_residuals_gauss)
# t-family model
m2_scar_density_biomass <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~ mean_pf_g_100m2*mean_pct_coral_cover + (1 | region), data = fish_corals_site_level, family=t_family)
scar_density_biomass_m2_residuals <- DHARMa::simulateResiduals(scar_density_biomass_m2, n = 1000, use.u = T)
plot(scar_density_biomass_m2_residuals)
plot(scar_density_biomass_m2_residuals)
plot(scar_density_biomass_m2_residuals)
plot(scar_density_biomass_m2_residuals)
plot(scar_density_biomass_m2_residuals_gauss)
plot(scar_density_biomass_m2_residuals_gauss)
#since interaction is NS, confirming that observed patterns are similar when interaction term is dropped
m4_scar_density_biomass <- glmmTMB::glmmTMB(log(mean_pct_coral_grazed) ~ sqrt(mean_pf_g_100m2)+mean_pct_coral_cover + (1 | region), data = fish_corals_site_level,family=gaussian)
m4_scar_density_biomass %>% summary() #similar results when interaction is dropped
m3_scar_density_biomass %>% summary() #viewing model results
#since interaction is NS, confirming that observed patterns are similar when interaction term is dropped
m4_scar_density_biomass <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~sqrt(mean_pf_g_100m2)+(mean_pct_coral_cover)+ (1 | region), data = fish_corals_site_level, family=t_family)
m4_scar_density_biomass %>% summary() #similar results when interaction is dropped
#since interaction is NS, confirming that observed patterns are similar when interaction term is dropped
m4_pct_grazed_biomass <- glmmTMB::glmmTMB(log(mean_pct_coral_grazed) ~sqrt(mean_pf_g_100m2)+(mean_pct_coral_cover)+ (1 | region), data = fish_corals_site_level, family=t_family)
#since interaction is NS, confirming that observed patterns are similar when interaction term is dropped
m4_pct_grazed_biomass <- glmmTMB::glmmTMB(log(mean_pct_coral_grazed) ~sqrt(mean_pf_g_100m2)+(mean_pct_coral_cover)+ (1 | region), data = fish_corals_site_level, family=gaussian)
m4_pct_grazed_biomasss %>% summary() #similar results when interaction is dropped
m4_pct_grazed_biomass %>% summary() #similar results when interaction is dropped
#viewing model results
m3_pct_grazed_biomass %>% summary()
# Kruskal-Wallis test & post hoc Dunn test
kruskal.test(mean_pf_n_100m2 ~ region, data=fish_corals_site_level)
# Kruskal-Wallis test & post hoc Dunn test
kruskal.test(mean_pf_g_100m2 ~ region, data=fish_corals_site_level) #sig differences by region
# Kruskal-Wallis test & post hoc Dunn test
kruskal.test(mean_pf_g_100m2 ~ region, data=fish_corals_site_level) #sig differences by region
fish_corals_site_level %>% rstatix::dunn_test(mean_pf_g_100m2 ~ region, p.adjust.method = "BH", detailed = FALSE)
# Kruskal-Wallis test & post hoc Dunn test
kruskal.test(mean_pf_n_100m2 ~ region, data=fish_corals_site_level)
fish_corals_site_level %>% rstatix::dunn_test(mean_pf_n_100m2 ~ region, p.adjust.method = "BH", detailed = FALSE) #post hoc test
# Kruskal-Wallis test & post hoc Dunn test
kruskal.test(mean_pct_coral_cover ~ region, data=fish_corals_site_level) #sig differences by region
fish_corals_site_level %>%  rstatix::dunn_test(mean_pct_coral_cover ~ region, p.adjust.method = "BH", detailed = FALSE)
# Kruskal-Wallis test & post hoc Dunn test
kruskal.test(mean_pct_coral_cover ~ region, data=fish_corals_site_level) #sig differences by region
fish_corals_site_level %>%  rstatix::dunn_test(mean_pct_coral_cover ~ region, p.adjust.method = "BH", detailed = FALSE)
model_scar_density_region <- aov(log(mean_scars_m2_coral) ~ region, data = fish_corals_site_level)
# ANOVA model summary
summary(model_scar_density_region)
TukeyHSD(model_scar_density_region) #post hoc comparison
# Kruskal-Wallis test & post hoc Dunn test
kruskal.test(log(mean_pct_coral_grazed) ~ region, data = fish_corals_site_level) #sig differences by region
fish_corals_site_level %>%  mutate(ln_mean_pct_coral_grazed=log(mean_pct_coral_grazed)) %>%
rstatix::dunn_test(ln_mean_pct_coral_grazed ~ region, p.adjust.method = "BH", detailed = FALSE)
table_s4 <- scar_pf_density_model_output %>%
bind_rows(proportion_grazed_pfdensity_model_output) %>%
bind_rows(scar_density_biomass_model_output) %>%
bind_rows(proportion_grazed_biomass_model_output)
write_csv(table_s4, here("figures_tables/supplements_tables/table_s4_site_level_glmm_results.csv"))
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_grazed_diversity_nbinom <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity+ coral_species+ coral_species:log(proportional_cover)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = transect_corallivory_diversity_df)
n_grazed_diversity_nbinom %>% summary()
n_grazed_diversity_nbinom_ci <- confint(n_grazed_diversity_nbinom) %>%
as_tibble() %>%
select(-Estimate)
#tidying model output
transect_level_model_output <- n_grazed_diversity_nbinom %>%
broom.mixed::tidy() %>%
bind_cols(n_grazed_diversity_nbinom_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Colonies grazed") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", "")) %>%
mutate(term=str_replace(term, "region", ""))
#back transforming estimated effect sizes (see paper supplements for description)
transect_level_model_output %>%
#exponentiating all independent variables except proportional cover, which was log transformed
mutate(estimate_backtransformed = case_when(!term %in% c("Branching Porites spp.:log(proportional_cover)", "Orbicella annularis:log(proportional_cover)", "Porites astreoides:log(proportional_cover)", "Siderastrea siderea:log(proportional_cover)") ~exp(estimate),
TRUE~as.double(estimate))) %>%
mutate(across(where(is.double), ~round(.x, 3)))
write_csv(transect_level_model_output, here("figures_tables/supplements_tables/table_s5_transect_level_grazed_coral_abundance_results.csv"))
transect_level_model_output
#back transforming estimated effect sizes (see paper supplements for description)
transect_level_model_output %>%
#exponentiating all independent variables except proportional cover, which was log transformed
mutate(estimate_backtransformed = case_when(!term %in% c("Branching Porites spp.:log(proportional_cover)", "Orbicella annularis:log(proportional_cover)", "Porites astreoides:log(proportional_cover)", "Siderastrea siderea:log(proportional_cover)") ~exp(estimate),
TRUE~as.double(estimate))) %>%
mutate(across(where(is.double), ~round(.x, 3)))
transect_level_model_output
exp(0.748)
0.748/100
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_grazed_diversity_nbinom <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity+ coral_species+ coral_species:log(proportional_cover)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = transect_corallivory_diversity_df)z
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_grazed_diversity_nbinom <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity+ coral_species+ coral_species:log(proportional_cover)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = transect_corallivory_diversity_df)
n_grazed_diversity_nbinom %>% summary()
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_grazed_diversity_nbinom <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity+ coral_species+ coral_species:(proportional_cover)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = transect_corallivory_diversity_df)
n_grazed_diversity_nbinom %>% summary()
#simulating residuals and evaluating model fit
n_grazed_diversity_poisson_residuals <- DHARMa::simulateResiduals(n_grazed_diversity_poisson, n = 1000, use.u = T)
plot(n_grazed_diversity_poisson_residuals) #diagnostic plot: KS test significant
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_grazed_diversity_nbinom <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity+ coral_species+ coral_species:sqrt(proportional_cover)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = transect_corallivory_diversity_df)
n_grazed_diversity_nbinom %>% summary()
#simulating residuals and evaluating model fit
n_grazed_diversity_poisson_residuals <- DHARMa::simulateResiduals(n_grazed_diversity_poisson, n = 1000, use.u = T)
plot(n_grazed_diversity_poisson_residuals) #diagnostic plot: KS test significant
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_grazed_diversity_nbinom <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity+ coral_species+ coral_species:log(proportional_cover)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = transect_corallivory_diversity_df)
transect_corallivory_diversity_df
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_grazed_diversity_nbinom <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity*pct_coral_cover+ coral_species+ #coral_species:log(proportional_cover)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = transect_corallivory_diversity_df)
n_grazed_diversity_nbinom %>% summary()
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_grazed_diversity_nbinom <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity+pct_coral_cover+ coral_species+ #coral_species:log(proportional_cover)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = transect_corallivory_diversity_df)
n_grazed_diversity_nbinom %>% summary()
transect_corallivory_diversity_df
hist(transect_corallivory_diversity_df$proportional_cover)
min(transect_corallivory_diversity_df$proportional_cover)
hist(log(transect_corallivory_diversity_df$proportional_cover))
hist(sqrt(transect_corallivory_diversity_df$proportional_cover))
hist(log(transect_corallivory_diversity_df$proportional_cover))
hist(sqrt(transect_corallivory_diversity_df$proportional_cover))
hist((transect_corallivory_diversity_df$proportional_cover)^(1/2))
hist(sqrt(transect_corallivory_diversity_df$proportional_cover))
hist((transect_corallivory_diversity_df$proportional_cover)^(1/2))
hist((transect_corallivory_diversity_df$proportional_cover)^(1/3))
hist((transect_corallivory_diversity_df$proportional_cover)^(1/4))
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_grazed_diversity_nbinom <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity+ coral_species+ coral_species:sqrt(proportional_cover)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = transect_corallivory_diversity_df)
plot(DHARMa::simulateResiduals(n_grazed_diversity_nbinom, n = 1000, use.u = T))
n_grazed_diversity_nbinom %>% summary()
hist((transect_corallivory_diversity_df$n_colonies_grazed))
hist((transect_corallivory_diversity_df$n_colonies_grazed>0))
hist((transect_corallivory_diversity_df$n_colonies_grazed[transect_corallivory_diversity_df$n_colonies_grazed>0]))
hist((transect_corallivory_diversity_df$n_colonies_grazed[transect_corallivory_diversity_df$n_colonies_grazed>1]))
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_grazed_diversity_nbinom <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity+ coral_species+ coral_species:(proportional_cover)^(1/3+ depth_m+ region+
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_grazed_diversity_nbinom <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity+ coral_species+ coral_species:(proportional_cover)^(1/3)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = transect_corallivory_diversity_df)
plot(DHARMa::simulateResiduals(n_grazed_diversity_nbinom, n = 1000, use.u = T))
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_grazed_diversity_nbinom <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity+ coral_species+ coral_species:(proportional_cover)^(1/3)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = transect_corallivory_diversity_df)
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_grazed_diversity_nbinom <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity+ coral_species+ coral_species:(proportional_cover^(1/3))+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = transect_corallivory_diversity_df)
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_grazed_diversity_nbinom <- glmmTMB::glmmTMB(n_colonies_grazed ~ scale(coral_diversity)+ coral_species+ coral_species:sqrt(proportional_cover)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = transect_corallivory_diversity_df)
plot(DHARMa::simulateResiduals(n_grazed_diversity_nbinom, n = 1000, use.u = T))
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_grazed_diversity_nbinom <- glmmTMB::glmmTMB(n_colonies_grazed ~ scale(coral_diversity)+ coral_species+ coral_species:log(proportional_cover)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = transect_corallivory_diversity_df)
plot(DHARMa::simulateResiduals(n_grazed_diversity_nbinom, n = 1000, use.u = T))
1^(0.582)
.01^(0.582)
exp(0.748)
exp
e
exp(0.748)
#back transforming estimated effect sizes (see paper supplements for description)
transect_level_model_output %>%
#exponentiating all independent variables except proportional cover, which was log transformed
mutate(estimate_backtransformed = exp(estimate)) %>%
mutate(across(where(is.double), ~round(.x, 3)))
#back transforming estimated effect sizes (see paper supplements for description)
transect_level_model_output %>%
#exponentiating all independent variables except proportional cover, which was log transformed
mutate(estimate_backtransformed = exp(estimate)) %>%
mutate(across(where(is.double), ~round(.x, 2)))
#back transforming estimated effect sizes (see paper supplements for description)
transect_level_model_output %>%
#exponentiating all independent variables except proportional cover, which was log transformed
mutate(estimate_backtransformed = exp(estimate)) %>%
mutate(across(where(is.double), ~round(.x, 1)))
#back transforming estimated effect sizes (see paper supplements for description)
transect_level_model_output %>%
#exponentiating all independent variables except proportional cover, which was log transformed
mutate(estimate_backtransformed = exp(estimate)) %>%
mutate(across(where(is.double), ~round(.x, 3)))
n_scars_col_level_model_output
write_csv(n_scars_col_level_model_output, here("figures_tables/supplements_tables/table_s6_colony_level_scar_abundance_results.csv"))
# back transforming estimated effect sizes (see paper supplements for description)
n_scars_col_level_model_output %>%
#exponentiating all independent variables
mutate(estimate_backtransformed = exp(estimate)) %>%
mutate(across(where(is.double), ~round(.x, 3)))
#back transforming estimated effect sizes (see paper supplements for description)
mean_scar_size_col_level_model_output %>%
#exponentiating all independent variables except coral area, which was log transformed
mutate(estimate_backtransformed = case_when(term!="log(col_area_cm2)"~exp(estimate),
TRUE~as.double(estimate))) %>%
mutate(across(where(is.double), ~round(.x, 3)))
pct_grazed_col_level_ci <- confint(pct_grazed_t) %>%
as_tibble() %>%
select(-Estimate)
pct_grazed_col_level_model_output <- pct_grazed_t %>%
broom.mixed::tidy() %>%
filter(term != "sd__Observation") %>%
bind_cols(pct_grazed_col_level_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Colony-level percent coral grazed") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", ""))
#back transforming estimated effect sizes (see paper supplements for description)
pct_grazed_col_level_model_output %>%
#exponentiating all independent variables except coral area, which was log transformed
mutate(estimate_backtransformed = case_when(term!="log(col_area_cm2)"~exp(estimate),
TRUE~as.double(estimate))) %>%
mutate(across(where(is.double), ~round(.x, 3)))
#back transforming estimated effect sizes (see paper supplements for description)
mean_scar_size_col_level_model_output %>%
#exponentiating all independent variables except coral area, which was log transformed
mutate(estimate_backtransformed = case_when(term!="log(col_area_cm2)"~exp(estimate),
TRUE~as.double(estimate))) %>%
mutate(across(where(is.double), ~round(.x, 3)))
#back transforming estimated effect sizes (see paper supplements for description)
pct_grazed_col_level_model_output %>%
#exponentiating all independent variables except coral area, which was log transformed
mutate(estimate_backtransformed = case_when(term!="log(col_area_cm2)"~exp(estimate),
TRUE~as.double(estimate))) %>%
mutate(across(where(is.double), ~round(.x, 3)))
