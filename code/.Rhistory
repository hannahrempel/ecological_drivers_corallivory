m2_scar_density_biomass_gauss <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~ mean_pf_g_100m2*mean_pct_coral_cover + (1 | region), data = fish_corals_site_level, family=t_family)
scar_density_biomass_m2_residuals_gauss <- DHARMa::simulateResiduals(m2_scar_density_biomass_gauss, n = 1000, use.u = T)
plot(scar_density_biomass_m2_residuals_gauss)
# t-family model
m2_scar_density_biomass <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~ mean_pf_g_100m2*mean_pct_coral_cover + (1 | region), data = fish_corals_site_level, family=t_family)
scar_density_biomass_m2_residuals <- DHARMa::simulateResiduals(scar_density_biomass_m2, n = 1000, use.u = T)
scar_density_biomass_m2_residuals <- DHARMa::simulateResiduals(m2_scar_density_biomass, n = 1000, use.u = T)
set.seed(1945) #for reproducible results from random simulations of residuals
#random-slope and intercept model with interaction: warnings - model is not identifiable/won't converge (for both gaussian and t distribution)
m1_scar_density_biomass_gauss <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~ mean_pf_g_100m2*mean_pct_coral_cover + (mean_pf_n_100m2 + mean_pct_coral_cover | region), data = fish_corals_site_level, family=gaussian)
m1_scar_density_biomass <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~ mean_pf_g_100m2*mean_pct_coral_cover + (mean_pf_n_100m2 + mean_pct_coral_cover | region), data = fish_corals_site_level, family=t_family)
#random-intercept model
# Gaussian model
m2_scar_density_biomass_gauss <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~ mean_pf_g_100m2*mean_pct_coral_cover + (1 | region), data = fish_corals_site_level, family=t_family)
scar_density_biomass_m2_residuals_gauss <- DHARMa::simulateResiduals(m2_scar_density_biomass_gauss, n = 1000, use.u = T)
plot(scar_density_biomass_m2_residuals_gauss)
# t-family model
m2_scar_density_biomass <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~ mean_pf_g_100m2*mean_pct_coral_cover + (1 | region), data = fish_corals_site_level, family=t_family)
scar_density_biomass_m2_residuals <- DHARMa::simulateResiduals(m2_scar_density_biomass, n = 1000, use.u = T)
plot(scar_density_biomass_m2_residuals) #residuals look better than Gaussian (lines more horizontal)
m2_scar_density_biomass %>% summary() #viewing model results
hist(fish_corals_site_level$mean_pf_g_100m2)
hist(sqrt(fish_corals_site_level$mean_pf_g_100m2)) #not perfect, but less skewness with sqrt transformation
#rerunning model with square-root transformation of corallivore density to attempt to address KS test issues
#using transformation to make it consistent and more comparable to other models
m3_scar_density_biomass <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~sqrt(mean_pf_g_100m2)*(mean_pct_coral_cover)+ (1 | region), data = fish_corals_site_level, family=t_family)
#evaluating model fit
m3_scar_density_biomass_residuals <- DHARMa::simulateResiduals(m3_scar_density_biomass, n = 1000, use.u = T)
plot(m3_scar_density_biomass_residuals) #QQ plot looks good but quantile deviations detected, taking a closer look at residuals
#looking at residuals by region - nothing seems very extreme
bind_cols(m3_scar_density_biomass_residuals$fittedResiduals, fish_corals_site_level$region) %>%
rename(y = `...1`,
region = `...2`) %>%
ggplot(aes(x = 1:26, y = y, color = region)) +
geom_point()
m3_scar_density_biomass %>% summary() #viewing model results
#since interaction is NS, confirming that observed patterns are similar when interaction term is dropped
m4_scar_density_biomass <- glmmTMB::glmmTMB(log(mean_scars_m2_coral) ~sqrt(mean_pf_g_100m2)+(mean_pct_coral_cover)+ (1 | region), data = fish_corals_site_level, family=t_family)
m4_scar_density_biomass %>% summary() #similar results when interaction is dropped
#tidying model output and calculating confidence intervals
m3_scar_density_biomass_ci <- confint(m3_scar_density_biomass) %>% as_tibble() %>% select(-Estimate)
scar_density_biomass_model_output <- m3_scar_density_biomass %>%
broom.mixed::tidy() %>%
filter(term != "sd__Observation") %>%
bind_cols(m3_scar_density_biomass_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="M2 - Scar density") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3)))
scar_density_biomass_model_output
set.seed(1945) #for reproducible results from random simulations of residuals
##Random-slope and intercept model with interaction: warnings - model is not identifiable/won't converge
m1_pct_grazed_biomass <- glmmTMB::glmmTMB(log(mean_pct_coral_grazed) ~ mean_pf_g_100m2*mean_pct_coral_cover + (mean_pf_g_100m2 + mean_pct_coral_cover | region), data = fish_corals_site_level, family=gaussian)
#Random-slope model with interaction
m2_pct_grazed_biomass <- glmmTMB::glmmTMB(log(mean_pct_coral_grazed) ~ mean_pf_g_100m2*mean_pct_coral_cover +(1 | region), data = fish_corals_site_level, family=gaussian)
m2_pct_grazed_biomass_residuals <- DHARMa::simulateResiduals(m2_pct_grazed_biomass, n = 1000, use.u = T)
plot(m2_pct_grazed_biomass_residuals) #significant quantile deviations, QQ plot shows variation in center not tails
#Significant quantile deviations in previous model, using transformation of predictor to address this
m3_pct_grazed_biomass <- glmmTMB::glmmTMB(log(mean_pct_coral_grazed) ~ sqrt(mean_pf_g_100m2)*mean_pct_coral_cover +(1 | region), data = fish_corals_site_level, family=gaussian)
m3_pct_grazed_biomass_residuals <- DHARMa::simulateResiduals(m3_pct_grazed_biomass, n = 1000, use.u = T)
plot(m3_pct_grazed_biomass_residuals) #still some quantile deviations but adjusted test NS, diagnostic plots look much better
#looking at residuals by region
#same as previous: 2 more extreme points (1 in STX and 1 in PAN), but no consistent differences by region
bind_cols(m3_pct_grazed_biomass_residuals$fittedResiduals, fish_corals_site_level$region) %>%
rename(y = `...1`,
region = `...2`) %>%
ggplot(aes(x = 1:26, y = y, color = region)) +
geom_point()
m4_pct_grazed_biomass <- glmmTMB::glmmTMB(log(mean_pct_coral_grazed) ~ sqrt(mean_pf_g_100m2)+mean_pct_coral_cover +(1 | region), data = fish_corals_site_level, family=gaussian)
m4_pct_grazed_biomass_residuals <- DHARMa::simulateResiduals(m4_pct_grazed_biomass, n = 1000, use.u = T)
plot(m4_pct_grazed_biomass_residuals) #still some quantile deviations but adjusted test NS, diagnostic plots look much better
m4_pct_grazed_biomass %>% summary() #same overall sig as findings to model w/ interaction, just different effect size
#viewing model results
m3_pct_grazed_biomass %>% summary()
#since interaction is NS, confirming that observed patterns are similar when interaction term is dropped
m4_pct_grazed_biomass <- glmmTMB::glmmTMB(log(mean_pct_coral_grazed) ~sqrt(mean_pf_g_100m2)+(mean_pct_coral_cover)+ (1 | region), data = fish_corals_site_level, family=gaussian)
m4_pct_grazed_biomass %>% summary() #similar results when interaction is dropped
#tidying model output and calculating confidence intervals
m3_pct_grazed_biomass_ci <- confint(m3_pct_grazed_biomass) %>% as_tibble() %>% select(-Estimate)
proportion_grazed_biomass_model_output <- m3_pct_grazed_biomass %>%
broom.mixed::tidy() %>%
filter(term != "sd__Observation") %>%
bind_cols(m3_pct_grazed_biomass_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="M4 - Coral area preyed upon (%)") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3)))
table_s4 <- scar_pf_density_model_output %>%
bind_rows(proportion_grazed_pfdensity_model_output) %>%
bind_rows(scar_density_biomass_model_output) %>%
bind_rows(proportion_grazed_biomass_model_output)
write_csv(table_s4, here("figures_tables/supplements_tables/table_s4_site_level_glmm_results.csv"))
set.seed(1945) #for reproducible results from random simulations of residuals
# total abundance of colonies per transect
total_coral_abundance <- coral_scar_df %>%
group_by(region, site, transect, depth_m) %>%
reframe(total_n_colonies=n())
# calculating transect-level coral diversity and coral cover
coral_taxa_abundance_cover <- coral_scar_df %>%
group_by(region, site, transect, depth_m, coral_species) %>%
reframe(n_colonies=n(), #transect-level abundance of coral colonies per species
pct_coral_cover_species=(sum(col_area_cm2)/300000)*100) %>% #coral cover by species
left_join(total_coral_abundance) #total coral abundance per transect
# calculating coral diversity and total coral cover per transect
coral_diversity_and_cover <- coral_taxa_abundance_cover %>%
mutate(prop_abundance=n_colonies/total_n_colonies, #proportional abundance of coral taxa
p_ln_prop_abundance=prop_abundance*log(prop_abundance)) %>% #for diversity calculations
group_by(region, site, transect, depth_m) %>%
reframe(coral_diversity=sum(p_ln_prop_abundance)*-1, #summarizing diversity per transect
pct_coral_cover=sum(pct_coral_cover_species)) #summarizing transect-level coral cover
# abundance of colonies per species per transect
n_colonies_species_transect <- coral_scar_df %>%
group_by(region, site, transect, depth_m, coral_species) %>%
dplyr::reframe(n_colonies=n()) %>% #transect-level abundance of coral colonies per species
left_join(total_coral_abundance, by = join_by(region, site, transect, depth_m))
# transect-level summary of the number of grazed colonies of four heavily predated taxa
transect_level_corallivory <- coral_scar_df %>%
group_by(region, site, transect, depth_m, coral_species) %>%
filter(n_new_scars>0) %>%
dplyr::reframe(n_colonies_grazed=n())
transect_corallivory_diversity_df <- coral_taxa_abundance_cover %>%
left_join(transect_level_corallivory, by = join_by(region, site, transect, depth_m, coral_species)) %>%
mutate(n_colonies_grazed=replace_na(n_colonies_grazed, 0)) %>%
select(region, site, transect, depth_m, coral_species, pct_coral_cover_species, n_colonies_grazed, n_colonies) %>%
filter(coral_species %in% c("Orbicella annularis", "Porites astreoides", "Branching Porites spp.", "Siderastrea siderea")) %>%
left_join(coral_diversity_and_cover, by = join_by(region, site, transect, depth_m)) %>%
mutate(proportional_cover=pct_coral_cover_species/pct_coral_cover)
set.seed(1945) #for reproducible results from random simulations of residuals
#looking at data distributions
transect_corallivory_diversity_df %>%
ggplot(aes(n_colonies_grazed))+
geom_histogram()
#coral cover is severely skewed
transect_corallivory_diversity_df %>%
ggplot(aes(pct_coral_cover_species))+
geom_histogram()
#checking that species percent cover does not have 0's
summary(transect_corallivory_diversity_df$pct_coral_cover_species)
#log-transformation normalized coral cover distribution
transect_corallivory_diversity_df %>%
ggplot(aes(log(pct_coral_cover_species)))+
geom_histogram()
#scar abundance per colony with poisson
n_grazed_diversity_poisson <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity+ coral_species+coral_species:log(proportional_cover)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
family=poisson,
data = transect_corallivory_diversity_df)
#scar abundance per colony with negative binomial distribution (without zero-inflation)
n_grazed_diversity_nbinom <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity+ coral_species+ coral_species:log(proportional_cover)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = transect_corallivory_diversity_df)
plot(DHARMa::simulateResiduals(n_grazed_diversity_nbinom, n = 1000, use.u = T))
#scar abundance per colony with negative binomial distribution (with zero-inflation)
n_grazed_diversity_nbinom_zi  <- glmmTMB::glmmTMB(n_colonies_grazed ~ coral_diversity+ coral_species+ coral_species:log(proportional_cover)+ depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~1, # zero-inflated
family=nbinom2(link = "log"),
data = transect_corallivory_diversity_df)
plot(DHARMa::simulateResiduals(n_grazed_diversity_nbinom, n = 1000, use.u = T))
hist(log(transect_corallivory_diversity_df$proportional_cover))
hist(sqrt(transect_corallivory_diversity_df$proportional_cover))
#likelihood ratio tests suggest NS difference between poisson and negative binomial
anova(n_grazed_diversity_poisson, n_grazed_diversity_nbinom)
#likelihood ratio tests suggest NS difference between negative binomial w/ or w/o zero inflation... supports using non zi model
anova(n_grazed_diversity_nbinom_zi, n_grazed_diversity_nbinom)
#simulating residuals and evaluating model fit
n_grazed_diversity_poisson_residuals <- DHARMa::simulateResiduals(n_grazed_diversity_poisson, n = 1000, use.u = T)
plot(n_grazed_diversity_poisson_residuals) #diagnostic plot: KS test significant
n_grazed_diversity_nbinom_residuals <- DHARMa::simulateResiduals(n_grazed_diversity_nbinom, n = 1000, use.u = T)
plot(n_grazed_diversity_nbinom_residuals) #diagnostic plot indicates no sig problems: using nbinom distribution
DHARMa::testZeroInflation(n_grazed_diversity_nbinom_residuals) #secondary check that there's no evidence of zero inflation (in addition to likelihood ratio test)
n_grazed_diversity_nbinom %>% summary()
n_grazed_diversity_nbinom_ci <- confint(n_grazed_diversity_nbinom) %>%
as_tibble() %>%
select(-Estimate)
#tidying model output
transect_level_model_output <- n_grazed_diversity_nbinom %>%
broom.mixed::tidy() %>%
bind_cols(n_grazed_diversity_nbinom_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Colonies grazed") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", "")) %>%
mutate(term=str_replace(term, "region", ""))
#back transforming estimated effect sizes (see paper supplements for description)
transect_level_model_output %>%
#exponentiating all independent variables except proportional cover, which was log transformed
mutate(estimate_backtransformed = exp(estimate)) %>%
mutate(across(where(is.double), ~round(.x, 3)))
write_csv(transect_level_model_output, here("figures_tables/supplements_tables/table_s5_transect_level_grazed_coral_abundance_results.csv"))
# total number of coral colonies observed across all transects
nrow(coral_scar_df)
# total number of colonies grazed (for coral taxa with 3+ predated cols across observations)
n_grazed_cols <- coral_scar_df %>%
filter(n_new_scars>0) %>%
distinct(colony_id) %>%
nrow()
n_grazed_cols
# number of grazed colonies by taxa (for coral taxa with 3+ predated cols across observations)
coral_scar_df %>%
filter(n_new_scars>0) %>%
group_by(coral_species) %>%
tally() %>%
arrange(-n)
# total number of colonies grazed for top four predated species
n_top_4_grazed <- coral_scar_df %>%
filter(n_new_scars>0) %>%
filter(coral_species %in% c("Orbicella annularis", "Branching Porites spp.", "Porites astreoides", "Siderastrea siderea")) %>%
distinct(colony_id) %>%
nrow()
#percentage of predation scars observed on these four coral species compared to total number of recent scars
round(n_top_4_grazed/n_grazed_cols*100, 1)
corallivory_by_diversity_fig <- transect_corallivory_diversity_df %>%
mutate(coral_species=factor(coral_species, levels = c("Orbicella annularis", "Branching Porites spp.", "Porites astreoides", "Siderastrea siderea"))) %>%
mutate(region= factor(region, levels = c("Panamá", "Florida",  "St. Croix", "Bonaire"))) %>%
ggplot(aes(x=coral_diversity, y=n_colonies_grazed, color=region))+
geom_point(alpha=0.6)+
scale_y_continuous(breaks = c(0,2,4,6,8,10),
labels= c(0,2,4,6,8,10),
limits=c(0,10.2))+
theme_bw()+
scale_color_manual(values=region_palette)+
scale_fill_manual(values=region_palette)+
facet_wrap(~coral_species)+
labs(x = "Coral diversity (H')",
y = expression(paste("Colonies preyed upon per 30 m" ^2)),
color="Region",
fill="Region")+
theme_bw()+
theme(legend.position = "top")
#reading in coral genus icons
branching_porties_image <- magick::image_read(path=here("figures_tables/reef_images", "Branching_porties.png"), density = NULL, depth = NULL, strip = TRUE)
orbicella_image <- magick::image_read(path=here("figures_tables/reef_images", "Orbicella_annularis.png"), density = NULL, depth = NULL, strip = TRUE)
porites_astreoides_image <- magick::image_read(path=here("figures_tables/reef_images", "Porites_astreoides.png"), density = NULL, depth = NULL, strip = TRUE)
siderastrea_image <- magick::image_read(path=here("figures_tables/reef_images", "Siderastrea_siderea.png"), density = NULL, depth = NULL, strip = TRUE)
#adding coral images to figure (image placement is off in R, but good in ggsave generated png)
corallivory_by_diversity_fig_final <- cowplot::ggdraw() +
draw_plot(corallivory_by_diversity_fig)+ #adds the plot (order matters to overlay the layers correctly)
draw_image(orbicella_image, x = -0.385, y = 0.29, scale=0.075)+
draw_image(branching_porties_image, x = 0.081, y = 0.29, scale=0.08)+
draw_image(porites_astreoides_image, x = -0.385, y = -0.113, scale=0.062)+
draw_image(siderastrea_image, x = 0.08, y = -0.11, scale=0.063)
#saving figure
ggsave(plot=corallivory_by_diversity_fig_final, filename=here("figures_tables/supplements_figs/fig_s5_corallivory_by_coral_diversity.png"), width = 190, height = 140, dpi = 600, units = "mm")
corallivory_by_diversity_fig_final
set.seed(1945) #for reproducible results from random simulations of residuals
# scar abundance per colony with poisson
n_scars_col_level_poisson <- glmmTMB::glmmTMB(n_new_scars ~ col_area_cm2 + coral_species + depth_m + region+
(1 | site/transect), #transects nested within sites within regions
family=poisson,
data = coral_scar_df)
n_scars_col_level_poisson %>% summary()
# scar abundance per colony with negative binomial distribution (without zero-inflation)
n_scars_col_level_nbinom <- glmmTMB::glmmTMB(n_new_scars ~ col_area_cm2 + coral_species + depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #non zero-inflated
family=nbinom2(link = "log"),
data = coral_scar_df)
#comparing with zero-inflated model
n_scars_col_level_nbinom_zi <- glmmTMB::glmmTMB(n_new_scars ~ col_area_cm2 + coral_species + depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
zi=~0, #zero-inflated
family=nbinom2(link = "log"),
data = coral_scar_df)
# likelihood ratio test of model using poisson versus negative binomial distribution: nbinom sig better
anova(n_scars_col_level_poisson, n_scars_col_level_nbinom)
# likelihood ratio test of model using ZI versus non-ZI negative binomial distribution: no sig diff, suggesting no ZI
anova(n_scars_col_level_nbinom_zi, n_scars_col_level_nbinom)
# simulating residuals and testing
n_scars_col_level_residuals <- DHARMa::simulateResiduals(n_scars_col_level_nbinom2, n = 1000, use.u = T)
# simulating residuals and testing
n_scars_col_level_residuals <- DHARMa::simulateResiduals(n_scars_col_level_nbinom, n = 1000, use.u = T)
# simulating residuals and testing
n_scars_col_level_residuals <- DHARMa::simulateResiduals(n_scars_col_level_nbinom, n = 1000, use.u = T)
# simulating residuals and testing
n_scars_col_level_residuals <- DHARMa::simulateResiduals(n_scars_col_level_nbinom, n = 1000, use.u = T)
# evaluating model residuals
plot(n_scars_col_level_residuals) #NS overdispersion, outliers, or KS
testZeroInflation(n_scars_col_level_residuals) #secondary test to confirm no ZI, test show NS ZI
# model output
n_scars_col_level_nbinom %>% summary()
# summary of mean number of new scars per colony by region
coral_scar_df %>%
group_by(region) %>%
dplyr::reframe(mean_n_new_scars=mean(n_new_scars)) %>%
mutate(mean_n_new_scars=round(mean_n_new_scars, 3))
coral_scar_df %>%
group_by(coral_species) %>%
reframe(mean_new_scars=mean(n_new_scars),
sem=sem(n_new_scars))
# tidying model output and calculating confidence intervals
n_scars_col_level_ci <- confint(n_scars_col_level_nbinom) %>%
as_tibble() %>%
select(-Estimate)
# tidying model output
n_scars_col_level_model_output <- n_scars_col_level_nbinom %>%
broom.mixed::tidy() %>%
bind_cols(n_scars_col_level_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Scar abundance") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", ""))
# back transforming estimated effect sizes (see paper supplements for description)
n_scars_col_level_model_output %>%
#exponentiating all independent variables
mutate(estimate_backtransformed = exp(estimate)) %>%
mutate(across(where(is.double), ~round(.x, 3)))
n_scars_col_level_model_output
write_csv(n_scars_col_level_model_output, here("figures_tables/supplements_tables/table_s6_colony_level_scar_abundance_results.csv"))
predated_colonies_subset <- coral_scar_df %>%
mutate(pct_grazed=total_grazed_cm2/col_area_cm2*100) %>%
filter(n_new_scars>0) %>%
#organizing as factor so the Branching Porites spp. cat is grouped with P. astreoides
mutate(coral_species=factor(coral_species, levels = c("Agaricia agaricites", "Agaricia humilis", "Agaricia tenuifolia", "Agaricia spp.", "Madracis auretenra", "Madracis decactis", "Orbicella annularis", "Orbicella faveolata", "Branching Porites spp.", "Porites astreoides", "Siderastrea siderea", "Stephanocoenia intersepta"))) %>%
mutate(region= factor(region, levels = c("Panamá", "Florida",  "St. Croix", "Bonaire")))
coral_scar_df %>%
filter(n_new_scars>0)
set.seed(1945) #for reproducible results from random simulations of residuals
#comparing model with gaussian versus t distributions
mean_scar_size_gaussian <- glmmTMB::glmmTMB(log(mean_scar_area_cm2) ~ log(col_area_cm2) + coral_species + depth_m+ region+
(1 | site/transect), #transects nested within sites within regions
family=gaussian,
data = predated_colonies_subset)
mean_scar_size_t <- glmmTMB::glmmTMB(log(mean_scar_area_cm2) ~ log(col_area_cm2) + coral_species + depth_m + region+
(1 | site/transect), #transects nested within sites within regions
family=t_family,
data = predated_colonies_subset)
# likelihood ratio test of model using t-distribution versus Gaussian distribution: t-dist sig better
anova(mean_scar_size_t, mean_scar_size_gaussian)
# simulating residuals and visualizing model fit: visuals confirm t-distribution
mean_scar_size_gaussian_residuals <- DHARMa::simulateResiduals(mean_scar_size_gaussian, n = 1000, use.u = T)
mean_scar_size_t_residuals <- DHARMa::simulateResiduals(mean_scar_size_t, n = 1000, use.u = T)
#diagnostic plots confirm t-distribution is a better fit
plot(mean_scar_size_gaussian_residuals)
plot(mean_scar_size_t_residuals)
#checking model results
mean_scar_size_t %>% summary()
mean_scar_size_col_level_ci <- confint(mean_scar_size_t) %>%
as_tibble() %>%
select(-Estimate)
mean_scar_size_col_level_model_output <- mean_scar_size_t %>%
broom.mixed::tidy() %>%
filter(term != "sd__Observation") %>%
bind_cols(mean_scar_size_col_level_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Colony-level mean scar size") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", ""))
#back transforming estimated effect sizes (see paper supplements for description)
mean_scar_size_col_level_model_output %>%
#exponentiating all independent variables except coral area, which was log transformed
mutate(estimate_backtransformed = case_when(term!="log(col_area_cm2)"~exp(estimate),
TRUE~as.double(estimate))) %>%
mutate(across(where(is.double), ~round(.x, 3)))
write_csv(mean_scar_size_col_level_model_output, here("figures_tables/supplements_tables/table_s7_colony_level_mean_scar_size_results.csv"))
set.seed(1945) #for reproducible results from random simulations of residuals
pct_grazed_gaussian <- glmmTMB::glmmTMB(log(pct_grazed) ~ log(col_area_cm2) + coral_species+ depth_m + region+
(1 | site/transect), #transects nested within sites within regions
family=gaussian,
data = predated_colonies_subset)
pct_grazed_t <- glmmTMB::glmmTMB(log(pct_grazed) ~ log(col_area_cm2) + coral_species + depth_m + region+
(1 | site/transect), #transects nested within sites within regions
family=t_family,
data = predated_colonies_subset)
# likelihood ratio test of model using t-distribution versus Gaussian distribution: no sig diff
anova(pct_grazed_t, pct_grazed_gaussian)
# simulating residuals and visualizing model fit: visuals confirm t-distribution
pct_grazed_gaussian_residuals <- DHARMa::simulateResiduals(pct_grazed_gaussian, n = 1000, use.u = T)
mean_scar_size_t_residuals <- DHARMa::simulateResiduals(pct_grazed_t, n = 1000, use.u = T)
#diagnostic plots confirm t-distribution is a better fit
plot(pct_grazed_gaussian_residuals)
plot(mean_scar_size_t_residuals)
#model results
pct_grazed_t %>% summary()
pct_grazed_col_level_ci <- confint(pct_grazed_t) %>%
as_tibble() %>%
select(-Estimate)
pct_grazed_col_level_model_output <- pct_grazed_t %>%
broom.mixed::tidy() %>%
filter(term != "sd__Observation") %>%
bind_cols(pct_grazed_col_level_ci) %>%
filter(effect!="ran_pars") %>%
janitor::clean_names() %>%
rename(ci_2.5 = x2_5_percent, ci_97.5=x97_5_percent) %>%
mutate(model="Colony-level percent coral grazed") %>%
select(model, term, statistic, p_value, estimate, ci_2.5, ci_97.5) %>%
mutate(across(where(is.double), ~round(.x, 3))) %>%
mutate(term=str_replace(term, "coral_species", ""))
#back transforming estimated effect sizes (see paper supplements for description)
pct_grazed_col_level_model_output %>%
#exponentiating all independent variables except coral area, which was log transformed
mutate(estimate_backtransformed = case_when(term!="log(col_area_cm2)"~exp(estimate),
TRUE~as.double(estimate))) %>%
mutate(across(where(is.double), ~round(.x, 3)))
write_csv(pct_grazed_col_level_model_output, here("figures_tables/supplements_tables/table_s8_colony_level_percent_coral_grazed_results.csv"))
#list of coral species arranged by the total number of colonies with scars
coral_species_arranged_by_n_grazed <- predated_colonies_subset %>%
group_by(coral_species) %>%
dplyr::reframe(n_grazed=n()) %>%
arrange(-n_grazed)
#used in graphs to simultaneously jitter and nudge points to avoid overlap
jitter_nudge <- ggpp::position_jitternudge(height = 0.08, y = -0.1, nudge.from = "jittered")
#summarizing y min and max for axis limits in following figure
predated_colonies_subset %>%
dplyr::reframe(min(mean_scar_area_cm2), max(mean_scar_area_cm2))
#first figure in set
fig_mean_scar_taxa <-predated_colonies_subset %>%
#for consistent order of regions
mutate(region= factor(region, levels = c("Panamá", "Florida",  "St. Croix", "Bonaire"))) %>%
#arranging coral species by the number of colonies with scars
mutate(coral_species= factor(coral_species, levels = c("Porites astreoides", "Branching Porites spp.", "Orbicella annularis","Siderastrea siderea","Agaricia agaricites","Agaricia tenuifolia", "Madracis decactis", "Orbicella faveolata", "Agaricia humilis", "Madracis auretenra", "Agaricia spp.", "Stephanocoenia intersepta"))) %>%
ggplot()+
ggridges::geom_density_ridges(aes(x=mean_scar_area_cm2, y=coral_species), alpha=0.7, scale=0.7)+
geom_point(aes(x=mean_scar_area_cm2, y=coral_species, color=region), size=0.7, alpha=0.5,
position=jitter_nudge)+
scale_color_manual(values=region_palette)+
scale_fill_manual(values=region_palette)+
scale_y_discrete(expand = c(0.1, 0), limits = rev)+
scale_x_continuous(trans = scales::log_trans(),
breaks = c(0.01, 0.1, 1, 10, 55),
labels= c(0.01, 0.1, 1, 10, 55),
limits=c(0.009,56))+
labs(x = expression(paste("Mean scar surface area (cm" ^2, ")")),
y = "Coral taxa",
color="Region",
fill="Region")+
theme_bw()+
theme(legend.position = "top",
axis.text.y= element_text(face="italic", size = 8),
axis.text.x=element_text(size = 8),
axis.title=element_text(size = 10))
#summarizing y min and max for axis limits in following figure
predated_colonies_subset %>%
dplyr::reframe(min(pct_grazed), max(pct_grazed))
#second figure in set
fig_pctgrazed_taxa <- predated_colonies_subset %>%
mutate(region= factor(region, levels = c("Panamá", "Florida",  "St. Croix", "Bonaire"))) %>%
mutate(coral_species= factor(coral_species, levels = c("Porites astreoides", "Branching Porites spp.", "Orbicella annularis","Siderastrea siderea","Agaricia agaricites","Agaricia tenuifolia", "Madracis decactis", "Orbicella faveolata", "Agaricia humilis", "Madracis auretenra", "Agaricia spp.", "Stephanocoenia intersepta"))) %>%
ggplot()+
ggridges::geom_density_ridges(aes(x=pct_grazed, y=coral_species), alpha=0.7, scale=0.7)+
geom_point(aes(x=pct_grazed, y=coral_species, color=region), size=0.7, alpha=0.6, position=jitter_nudge)+
scale_color_manual(values=region_palette)+
scale_fill_manual(values=region_palette)+
scale_y_discrete(expand = c(0.1, 0), limits = rev)+ #so corals are in alphabetical order
scale_x_continuous(trans = scales::log_trans(),
breaks = c(0.001,  0.01, 0.1, 1, 10, 75),
labels= c(0.001, 0.01, 0.1, 1, 10, 75),
limits=c(0.001,75))+
labs(x = expression(paste("Coral area preyed upon (%)")),
y = "",
color="Region",
fill="Region")+
theme_bw()+
theme(legend.position = "top",
axis.text.y= element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_text(size = 8),
axis.title=element_text(size = 10))
#summarizing x min and max for axis limits in following figure
predated_colonies_subset %>%
dplyr::reframe(min(col_area_cm2), max(col_area_cm2))
#third figure in set
fig_pctgrazed_colsize <- predated_colonies_subset %>%
mutate(region= factor(region, levels = c("Panamá", "Florida",  "St. Croix", "Bonaire"))) %>%
ggplot(aes(y=pct_grazed, x=col_area_cm2, color=region))+
geom_point(size=0.8, alpha=0.75)+
geom_smooth(method="lm")+
scale_colour_manual(values=region_palette)+
theme_bw()+
labs(x = expression(paste("Coral colony surface area (", cm^2, ")")),
y = expression(paste("Coral area preyed upon (%)")),
color="Region")+
scale_y_continuous(trans = scales::log_trans(),
breaks = c(0.0001, 0.001, 0.01, 0.1, 1, 10, 25, 75),
labels= c("0.0001", 0.001, 0.01, 0.1, 1, 10, 25, 75),
limits=c(0.0001,75))+
scale_x_continuous(trans = scales::log_trans(),
breaks = c(5, 10, 50, 250, 1000, 5000, 20000),
labels= c(5, 10, 50, 250, 1000, 5000, 20000),
limits=c(5,20000))+
theme(legend.position	="none",
axis.text.x=element_text(size = 8),
axis.title=element_text(size = 10))
#creating combined three-panel figure
predated_coral_patterns <- ggpubr::ggarrange(fig_mean_scar_taxa,
fig_pctgrazed_taxa,
fig_pctgrazed_colsize,
ncol=3,
align="h",
common.legend = TRUE,
labels=c("a","b", "c"),
widths=c(1.5,1,1.2),
legend="top")
predated_coral_patterns
#saving as .jpg version (for presentations) and .pdf version (for publications)
ggsave(plot=predated_coral_patterns, filename=here("figures_tables/fig4_predated_coral_patterns.jpg"), width = 215, height = 80, dpi = 600, units = "mm")
ggsave(plot=predated_coral_patterns, filename=here("figures_tables/fig4_predated_coral_patterns.pdf"), width = 215, height = 80, dpi = 600, units = "mm")
